{"version":3,"file":"train.js","sourceRoot":"","sources":["train.ts"],"names":[],"mappings":"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","sourcesContent":["import {note as n} from \"../../src/note/note\";\nimport {set_depth_tree_export} from \"../../src/scripts/parse_tree\";\nimport TreeModel = require(\"tree-model\");\nimport {user_input} from \"../../src/control/user_input\";\nimport UserInputHandler = user_input.UserInputHandler;\nimport {window} from \"../../src/render/window\";\nimport ListWindow = window.ListWindow;\nimport {trainer} from \"../../src/train/trainer\";\nimport Trainer = trainer.Trainer;\nimport {algorithm} from \"../../src/train/algorithm\";\nimport {struct} from \"../../src/train/struct\";\nimport StructTree = struct.StructTree;\nimport Detect = algorithm.Detect;\nimport {message} from \"../../src/message/messenger\";\nimport Messenger = message.Messenger;\nimport {live} from \"../../src/live/live\";\nimport LiveClipVirtual = live.LiveClipVirtual;\nimport {segment} from \"../../src/segment/segment\";\nimport Segment = segment.Segment;\nimport {clip} from \"../../src/clip/clip\";\nimport Clip = clip.Clip;\nimport {serialize} from \"../../src/serialize/serialize\";\nimport TrainThawer = deserialize.TrainThawer;\nimport TrainFreezer = serialize.TrainFreezer;\nimport {deserialize} from \"../../src/serialize/deserialize\";\n\n\nlet tree: TreeModel = new TreeModel();\n\nlet segment_note_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            1,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet segment_note_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            5,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_target_1_subtarget_1 = tree.parse(\n    {\n            id: -1, // TODO: hashing scheme for clip id and beat start\n            note: new n.Note(\n                51,\n                1,\n                2,\n                90,\n                0\n            ),\n            children: [\n\n            ]\n    }\n);\n\nlet note_target_1_subtarget_2 = tree.parse(\n    {\n            id: -1, // TODO: hashing scheme for clip id and beat start\n            note: new n.Note(\n                53,\n                1,\n                2,\n                90,\n                0\n            ),\n            children: [\n\n            ]\n    }\n);\n\n\n\nlet note_target_2_subtarget_1 = tree.parse(\n    {\n            id: -1, // TODO: hashing scheme for clip id and beat start\n            note: new n.Note(\n                52,\n                3,\n                2,\n                90,\n                0\n            ),\n            children: [\n\n            ]\n    }\n);\n\nlet note_target_2_subtarget_2 = tree.parse(\n    {\n            id: -1, // TODO: hashing scheme for clip id and beat start\n            note: new n.Note(\n                54,\n                3,\n                2,\n                90,\n                0\n            ),\n            children: [\n\n            ]\n    }\n);\n\n\n\nlet note_target_3_subtarget_1 = tree.parse(\n    {\n            id: -1, // TODO: hashing scheme for clip id and beat start\n            note: new n.Note(\n                53,\n                5,\n                2,\n                90,\n                0\n            ),\n            children: [\n\n            ]\n    }\n);\n\nlet note_target_3_subtarget_2 = tree.parse(\n    {\n            id: -1, // TODO: hashing scheme for clip id and beat start\n            note: new n.Note(\n                55,\n                5,\n                2,\n                90,\n                0\n            ),\n            children: [\n\n            ]\n    }\n);\n\n\n\nlet note_target_4_subtarget_1 = tree.parse(\n    {\n            id: -1, // TODO: hashing scheme for clip id and beat start\n            note: new n.Note(\n                54,\n                7,\n                2,\n                90,\n                0\n            ),\n            children: [\n\n            ]\n    }\n);\n\nlet note_target_4_subtarget_2 = tree.parse(\n    {\n            id: -1, // TODO: hashing scheme for clip id and beat start\n            note: new n.Note(\n                56,\n                7,\n                2,\n                90,\n                0\n            ),\n            children: [\n\n            ]\n    }\n);\n\n\nlet mode_texture = 'harmonic';\nlet mode_control = 'instrumental';\n\nlet user_input_handler = new UserInputHandler(\n    mode_texture,\n    mode_control\n);\n\nlet window = new ListWindow(\n\n);\n\nlet algorithm = new Detect(\n    user_input_handler\n);\n\n// stubs\nlet song = {\n    set_overdub: (int) => {},\n    set_session_record: (int) => {}\n};\n\nlet clip_user_input = {\n    fire: () => {},\n    stop: () => {},\n    set_endpoints_loop: (former, latter) => {}\n};\n\nlet notes_segments = [\n    segment_note_1,\n    segment_note_2\n];\n\nlet notes_targets = [\n    note_target_1_subtarget_1,\n    note_target_1_subtarget_2,\n    note_target_2_subtarget_1,\n    note_target_2_subtarget_2,\n    note_target_3_subtarget_1,\n    note_target_3_subtarget_2,\n    note_target_4_subtarget_1,\n    note_target_4_subtarget_2\n];\n\nlet segments: Segment[] = [];\n\nfor (let note of notes_segments) {\n    segments.push(\n        new Segment(\n            note\n        )\n    )\n}\n\nlet clip_dao_virtual = new LiveClipVirtual(notes_targets);\n\nlet clip_target_virtual = new Clip(clip_dao_virtual);\n\nlet messenger = new Messenger('node', 0);\n\nlet trainer = new Trainer(\n    window,\n    user_input_handler,\n    algorithm,\n    clip_user_input,\n    clip_target_virtual,\n    song,\n    segments,\n    messenger\n);\n\n// test case - 2 segments, 2 notes a piece\n\ntrainer.init(\n\n);\n\ntrainer.accept_input(\n    note_target_1_subtarget_1\n);\n\ntrainer.accept_input(\n    note_target_1_subtarget_2\n);\n\ntrainer.accept_input(\n    note_target_2_subtarget_1\n);\n\ntrainer.accept_input(\n    note_target_2_subtarget_2\n);\n\ntrainer.accept_input(\n    note_target_3_subtarget_1\n);\n\ntrainer.clear_window(\n\n);\n\nlet freezer = new TrainFreezer(\n    'node'\n);\n\nfreezer.freeze(\n    trainer,\n    '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train.json'\n);\n\nlet thawer = new TrainThawer(\n    'node'\n);\n\nlet train_thawed = thawer.thaw(\n    '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train.json'\n);\n\ntrain_thawed.render_window(\n\n);\n\n// verify that it look\n"]}