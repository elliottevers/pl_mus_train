{"version":3,"file":"predict.js","sourceRoot":"","sources":["predict.ts"],"names":[],"mappings":"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","sourcesContent":["import {note as n} from \"../../src/note/note\";\nimport TreeModel = require(\"tree-model\");\nimport {user_input} from \"../../src/control/user_input\";\nimport UserInputHandler = user_input.UserInputHandler;\nimport {message} from \"../../src/message/messenger\";\nimport Messenger = message.Messenger;\nimport {live} from \"../../src/live/live\";\nimport LiveClipVirtual = live.LiveClipVirtual;\nimport {clip} from \"../../src/clip/clip\";\nimport Clip = clip.Clip;\nimport {algorithm} from \"../../src/train/algorithm\";\nimport {window} from \"../../src/render/window\";\nimport {trainer} from \"../../src/train/trainer\";\nimport Trainer = trainer.Trainer;\nimport {modes_control, modes_texture} from \"../../src/constants/constants\";\nimport POLYPHONY = modes_texture.POLYPHONY;\nimport INSTRUMENTAL = modes_control.INSTRUMENTAL;\nimport MatrixWindow = window.MatrixWindow;\nimport Predict = algorithm.Predict;\nimport {scene as module_scene} from \"../../src/scene/scene\";\nimport SceneDaoVirtual = module_scene.SceneDaoVirtual;\nimport {track} from \"../../src/track/track\";\nimport TrackDaoVirtual = track.TrackDaoVirtual;\nimport {song as module_song} from \"../../src/song/song\";\nimport SongDaoVirtual = module_song.SongDaoVirtual;\nimport Scene = module_scene.Scene;\nimport Song = module_song.Song;\nimport Track = track.Track;\nimport {segment} from \"../../src/segment/segment\";\nimport Segment = segment.Segment;\nimport {freeze} from \"../../src/serialize/freeze\";\nimport TrainFreezer = freeze.TrainFreezer;\nimport {thaw} from \"../../src/serialize/thaw\";\nimport TrainThawer = thaw.TrainThawer;\nimport MONOPHONY = modes_texture.MONOPHONY;\n\n\nlet tree: TreeModel = new TreeModel();\n\nlet segment_note_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            0,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet segment_note_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            4,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_target_1_subtarget_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            0,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n// let note_target_1_subtarget_2 = tree.parse(\n//     {\n//         id: -1, // TODO: hashing scheme for clip id and beat start\n//         note: new n.Note(\n//             53,\n//             1,\n//             2,\n//             90,\n//             0\n//         ),\n//         children: [\n//\n//         ]\n//     }\n// );\n\n\n\nlet note_target_2_subtarget_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            52,\n            2,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n// let note_target_2_subtarget_2 = tree.parse(\n//     {\n//         id: -1, // TODO: hashing scheme for clip id and beat start\n//         note: new n.Note(\n//             54,\n//             3,\n//             2,\n//             90,\n//             0\n//         ),\n//         children: [\n//\n//         ]\n//     }\n// );\n\n\n\nlet note_target_3_subtarget_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            53,\n            4,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n// let note_target_3_subtarget_2 = tree.parse(\n//     {\n//         id: -1, // TODO: hashing scheme for clip id and beat start\n//         note: new n.Note(\n//             55,\n//             5,\n//             2,\n//             90,\n//             0\n//         ),\n//         children: [\n//\n//         ]\n//     }\n// );\n\n\n\nlet note_target_4_subtarget_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            54,\n            6,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n// let note_target_4_subtarget_2 = tree.parse(\n//     {\n//         id: -1, // TODO: hashing scheme for clip id and beat start\n//         note: new n.Note(\n//             56,\n//             7,\n//             2,\n//             90,\n//             0\n//         ),\n//         children: [\n//\n//         ]\n//     }\n// );\n\n\n// let mode_texture = POLYPHONY;\nlet mode_texture = MONOPHONY;\nlet mode_control = INSTRUMENTAL;\n\nlet user_input_handler = new UserInputHandler(\n    mode_texture,\n    mode_control\n);\n\nlet env: string = 'node_for_max';\n// env = 'node';\n\n\nlet messenger = new Messenger(env, 0, 'render_predict');\n\nlet algorithm_train = new Predict(\n);\n\nlet window_train = new MatrixWindow(\n    384,\n    384,\n    messenger\n);\n\nlet scene, scenes;\n\nscenes = [];\n\nscene = new Scene(\n    new SceneDaoVirtual(\n\n    )\n);\n\nscenes.push(scene);\n\nscene = new Scene(\n    new SceneDaoVirtual(\n\n    )\n);\n\nscenes.push(scene);\n\nlet song = new Song(\n    new SongDaoVirtual(\n        scenes\n    )\n);\n\n// let num_clip_slots = 2;\n\n\n// USER INPUT CLIP - HAS THE SEGMENTS\n\nlet clip_dao_virtual, clip_user_input;\n\nlet clips_user_input = [];\n\n\nclip_dao_virtual = new LiveClipVirtual([segment_note_1]);\n\nclip_dao_virtual.beat_start = 0;\n\nclip_dao_virtual.beat_end = 4;\n\nclip_user_input = new Clip(\n    clip_dao_virtual\n);\n\nclips_user_input.push(clip_user_input);\n\n\n\nclip_dao_virtual = new LiveClipVirtual([segment_note_2]);\n\nclip_dao_virtual.beat_start = 4;\n\nclip_dao_virtual.beat_end = 8;\n\nclip_user_input = new Clip(\n    clip_dao_virtual\n);\n\nclips_user_input.push(clip_user_input);\n\n\n\nlet track_user_input = new Track(\n    new TrackDaoVirtual(\n        clips_user_input\n    )\n);\n\n// TARGET CLIP\n\nlet clips_target = [];\n\nlet clip_target;\n\nclip_dao_virtual = new LiveClipVirtual(\n    [\n        note_target_1_subtarget_1,\n        note_target_2_subtarget_1,\n    ]\n);\n\nclip_dao_virtual.beat_start = 0;\n\nclip_dao_virtual.beat_end = 4;\n\nclip_target = new Clip(\n    clip_dao_virtual\n);\n\nclips_target.push(clip_target);\n\n\n\nclip_dao_virtual = new LiveClipVirtual(\n    [\n        note_target_3_subtarget_1,\n        note_target_4_subtarget_1,\n    ]\n);\n\nclip_dao_virtual.beat_start = 4;\n\nclip_dao_virtual.beat_end = 8;\n\nclip_target = new Clip(\n    clip_dao_virtual\n);\n\nclips_target.push(clip_target);\n\n\nlet track_target = new Track(\n    new TrackDaoVirtual(\n        clips_target\n    )\n);\n\ntrack_target.load_clips();\n\ntrack_user_input.load_clips();\n\nlet segments = Segment.from_notes(\n    track_user_input.get_notes()\n);\n\n// assign scenes to segments\nfor (let i_segment in segments) {\n    let segment = segments[Number(i_segment)];\n\n    segment.set_scene(\n        new Scene(\n            new SceneDaoVirtual()\n        )\n    );\n\n    segment.set_clip_user_input(\n        clips_user_input[Number(i_segment)]\n    )\n}\n\nlet trainer_local = new Trainer(\n    window_train,\n    user_input_handler,\n    algorithm_train,\n    track_target,\n    track_user_input,\n    song,\n    segments,\n    messenger\n);\n\n// test case - 2 segments, 2 notes a piece\n\ntrainer_local.commence(\n\n);\n\ntrainer_local.accept_input(\n    [note_target_1_subtarget_1]\n);\n\n// trainer_local.accept_input(\n//     [note_target_1_subtarget_2]\n// );\n\ntrainer_local.accept_input(\n    [note_target_2_subtarget_1]\n);\n\n// trainer_local.accept_input(\n//     [note_target_2_subtarget_2]\n// );\n\ntrainer_local.accept_input(\n    [note_target_3_subtarget_1]\n);\n\ntrainer_local.render_window(\n\n);\n\ntrainer_local.clear_window(\n\n);\n\nTrainFreezer.freeze(\n    trainer_local,\n    '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train_predict.json',\n    env\n);\n\ntrainer_local = new Trainer(\n    window_train,\n    user_input_handler,\n    algorithm_train,\n    track_target,\n    track_user_input,\n    song,\n    segments,\n    messenger,\n    true\n);\n\nlet notes_thawed = TrainThawer.thaw_notes(\n    '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train_predict.json',\n    env\n);\n\ntrainer_local.commence();\n\nfor (let note of notes_thawed) {\n    trainer_local.accept_input([note])\n}\n\ntrainer_local.virtualized = false;\n\ntrainer_local.render_window();"]}