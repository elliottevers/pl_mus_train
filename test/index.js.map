{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AAAA,iBAAe;AACf,+BAAiC;AACjC,yCAA0C;AAC1C,sCAAyC;AAEzC,QAAQ,CAAC,MAAM,EAAE;IACb,EAAE,CAAC,gCAAgC,EAAE;QACjC,IAAI,IAAI,GAAG,IAAI,WAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,MAAM,EAAE;IACb,EAAE,CAAC,OAAO,EAAE;QACR,IAAI,IAAI,GAAG,IAAI,SAAS,EAAE,CAAC;QAE3B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;YAClB,EAAE,EAAE,CAAC;YACL,QAAQ,EAAE;gBACN;oBACI,EAAE,EAAE,EAAE;oBACN,QAAQ,EAAE,CAAC,EAAC,EAAE,EAAE,GAAG,EAAC,CAAC;iBACxB;gBACD;oBACI,EAAE,EAAE,EAAE;oBACN,QAAQ,EAAE,CAAC,EAAC,EAAE,EAAE,GAAG,EAAE,cAAc,EAAE,aAAa,EAAC,EAAE,EAAC,EAAE,EAAE,GAAG,EAAC,CAAC;iBAClE;gBACD;oBACI,EAAE,EAAE,EAAE;iBACT;aACJ;SACJ,CAAC,CAAC;QAEH,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1G,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAC","sourcesContent":["import \"mocha\";\nimport * as assert from \"assert\";\nimport {note as n} from \"../src/note/note\"\nimport TreeModel = require(\"tree-model\");\n\ndescribe(\"note\", ()=>{\n    it(\"should store pitch information\", ()=>{\n        let note = new n.Note(60, 0, 4, 100, 0);\n        assert.equal(note.pitch, 60);\n    });\n});\n\ndescribe('tree', function () {\n    it('works', ()=>{\n        let tree = new TreeModel();\n\n        let root = tree.parse({\n            id: 1,\n            children: [\n                {\n                    id: 11,\n                    children: [{id: 111}]\n                },\n                {\n                    id: 12,\n                    children: [{id: 121, attribute_test: 'hello world'}, {id: 122}]\n                },\n                {\n                    id: 13\n                }\n            ]\n        });\n\n        let path_length = root.first(function (node) {     return node.model.attribute_test === 'hello world'; });\n        assert.equal(path_length, 2);\n    })\n});"]}