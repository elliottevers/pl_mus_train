{"version":3,"file":"derive.js","sourceRoot":"","sources":["derive.ts"],"names":[],"mappings":"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","sourcesContent":["import {note as n} from \"../../src/note/note\";\nimport TreeModel = require(\"tree-model\");\nimport {user_input} from \"../../src/control/user_input\";\nimport UserInputHandler = user_input.UserInputHandler;\nimport {message} from \"../../src/message/messenger\";\nimport Messenger = message.Messenger;\nimport {live} from \"../../src/live/live\";\nimport LiveClipVirtual = live.LiveClipVirtual;\nimport {clip} from \"../../src/clip/clip\";\nimport Clip = clip.Clip;\nimport {algorithm} from \"../../src/train/algorithm\";\nimport {window} from \"../../src/render/window\";\nimport MatrixWindow = window.MatrixWindow;\nimport {trainer as module_trainer} from \"../../src/train/trainer\";\nimport Trainer = module_trainer.Trainer;\nimport {modes_control, modes_texture} from \"../../src/constants/constants\";\nimport VOCAL = modes_control.VOCAL;\nimport MONOPHONY = modes_texture.MONOPHONY;\nimport Derive = algorithm.Derive;\nimport {track} from \"../../src/track/track\";\nimport TrackDaoVirtual = track.TrackDaoVirtual;\nimport {song as module_song} from \"../../src/song/song\";\nimport SongDaoVirtual = module_song.SongDaoVirtual;\nimport {scene as module_scene} from \"../../src/scene/scene\";\nimport Scene = module_scene.Scene;\nimport Song = module_song.Song;\nimport SceneDaoVirtual = module_scene.SceneDaoVirtual;\nimport Track = track.Track;\nimport {segment} from \"../../src/segment/segment\";\nimport Segment = segment.Segment;\nimport {freeze} from \"../../src/serialize/freeze\";\nimport TrainFreezer = freeze.TrainFreezer;\nimport {thaw} from \"../../src/serialize/thaw\";\nimport TrainThawer = thaw.TrainThawer;\n\n\nlet tree: TreeModel = new TreeModel();\n\n// let notes_segments;\n\nlet note_2_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            48,\n            0,\n            16,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_2_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            49,\n            16,\n            32,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_2_3 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            50,\n            48,\n            16,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            2,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            53,\n            8,\n            3,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_3 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            48,\n            17,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_4 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            50,\n            42,\n            6,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_5 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            40,\n            54,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_6 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            45,\n            59,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_4_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            7,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_4_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            25,\n            3,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\nlet notes_segments = [note_2_1, note_2_2, note_2_3];\n\nlet mode_texture = MONOPHONY;\n\nlet mode_control = VOCAL;\n\nlet user_input_handler = new UserInputHandler(\n    mode_texture,\n    mode_control\n);\n\nlet env: string = 'node_for_max';\n// env = 'node';\n\n\nlet messenger = new Messenger(env, 0, 'render_derive');\n\nlet algorithm_train = new Derive();\n\nalgorithm_train.set_depth(\n    3\n);\n\nlet window_local = new MatrixWindow(\n    384,\n    384,\n    messenger\n);\n\n\nlet scene, scenes;\n\nscenes = [];\n\n// first scene\nscene = new Scene(\n    new SceneDaoVirtual(\n\n    )\n);\n\nscenes.push(scene);\n\n\n// second scene\nscene = new Scene(\n    new SceneDaoVirtual(\n\n    )\n);\n\nscenes.push(scene);\n\n\n// third scene\nscene = new Scene(\n    new SceneDaoVirtual(\n\n    )\n);\n\nscenes.push(scene);\n\nlet song = new Song(\n    new SongDaoVirtual(\n        scenes\n    )\n);\n\n\n// USER INPUT CLIP - HAS THE SEGMENTS\n\nlet clip_dao_virtual, clip_user_input;\n\nlet clips_user_input = [];\n\n\n// first segment\nclip_dao_virtual = new LiveClipVirtual([note_2_1]);\n\nclip_dao_virtual.beat_start = 0;\n\nclip_dao_virtual.beat_end = 16;\n\nclip_user_input = new Clip(\n    clip_dao_virtual\n);\n\nclips_user_input.push(clip_user_input);\n\n\n\n// second segment\nclip_dao_virtual = new LiveClipVirtual([note_2_2]);\n\nclip_dao_virtual.beat_start = 16;\n\nclip_dao_virtual.beat_end = 48;\n\nclip_user_input = new Clip(\n    clip_dao_virtual\n);\n\nclips_user_input.push(clip_user_input);\n\n\n\n// third segment\nclip_dao_virtual = new LiveClipVirtual([note_2_3]);\n\nclip_dao_virtual.beat_start = 48;\n\nclip_dao_virtual.beat_end = 64;\n\nclip_user_input = new Clip(\n    clip_dao_virtual\n);\n\nclips_user_input.push(clip_user_input);\n\n\n\nlet track_user_input = new Track(\n    new TrackDaoVirtual(\n        clips_user_input\n    )\n);\n\n// TARGET CLIP\n\nlet clips_target = [];\n\nlet clip_target;\n\n\n// these shouldn't matter for deriving\nclip_dao_virtual = new LiveClipVirtual(\n    []\n);\n\nclip_dao_virtual.beat_start = 0;\n\nclip_dao_virtual.beat_end = 64;\n\nclip_target = new Clip(\n    clip_dao_virtual\n);\n\nclips_target.push(clip_target);\n\nlet track_target = new Track(\n    new TrackDaoVirtual(\n        clips_target\n    )\n);\n\n\ntrack_target.load_clips();\n\ntrack_user_input.load_clips();\n\nlet segments = Segment.from_notes(\n    track_user_input.get_notes()\n);\n\n// assign scenes to segments\nfor (let i_segment in segments) {\n    let segment = segments[Number(i_segment)];\n\n    segment.set_scene(\n        new Scene(\n            new SceneDaoVirtual()\n        )\n    );\n\n    segment.set_clip_user_input(\n        clips_user_input[Number(i_segment)]\n    )\n}\n\n\nlet trainer_local = new Trainer(\n    window_local,\n    user_input_handler,\n    algorithm_train,\n    track_target,\n    track_user_input,\n    song,\n    segments,\n    messenger\n);\n\n// test case - 2 segments, 2 notes a piece\n\ntrainer_local.commence();\n\ntrainer_local.render_window();\n\ntrainer_local.accept_input(\n    [note_3_1, note_3_2]\n);\n\ntrainer_local.accept_input(\n    [note_3_3, note_3_4]\n);\n\ntrainer_local.accept_input(\n    [note_3_5, note_3_6]\n);\n\ntrainer_local.accept_input(\n    [note_4_1]\n);\n\ntrainer_local.accept_input(\n    [note_4_2]\n);\n\ntrainer_local.render_window(\n\n);\n\ntrainer_local.clear_window(\n\n);\n\nTrainFreezer.freeze(\n    trainer_local,\n    '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train_derive.json',\n    env\n);\n\n// TODO: batch these notes up and input them as segment groups\n\ntrainer_local = new Trainer(\n    window_local,\n    user_input_handler,\n    algorithm_train,\n    track_target,\n    track_user_input,\n    song,\n    segments,\n    messenger,\n    true\n);\n\n// let matrix_deserialized = TrainThawer.thaw_notes_matrix(\n//     '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train_derive.json',\n//     env\n// );\n\n// trainer_local.commence();\n//\n// let input_left = true;\n//\n// while (input_left) {\n//     let coord_current = trainer_local.iterator_matrix_train.get_coord_current();\n//\n//     if (trainer_local.iterator_matrix_train.done || matrix_deserialized[coord_current[0]][coord_current[1]].length === 0) {\n//         input_left = false;\n//     }\n//\n//     trainer_local.accept_input(\n//         matrix_deserialized[coord_current[0]][coord_current[1]]\n//     );\n// }\n//\n//\n// trainer_local.virtualized = false;\n//\n// trainer_local.render_window();\n\nlet matrix_deserialized = TrainThawer.thaw_notes_matrix(\n    '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train_derive.json',\n    env\n);\n\ntrainer_local.commence();\n\n// skip over the layer of segments\n\nlet input_left = true;\n\nwhile (input_left) {\n    let coord_current = trainer_local.iterator_matrix_train.get_coord_current();\n\n    let coord_user_input_history = algorithm_train.coord_to_index_history_user_input(coord_current);\n\n    if (trainer_local.iterator_matrix_train.done || matrix_deserialized[coord_user_input_history[0]][coord_user_input_history[1]].length === 0) {\n\n        algorithm_train.terminate(trainer_local.struct_train, segments);\n\n        algorithm_train.pause(song, trainer_local.segment_current.scene);\n\n        input_left = false;\n\n        continue;\n    }\n\n    trainer_local.accept_input(\n        matrix_deserialized[coord_user_input_history[0]][coord_user_input_history[1]]\n    );\n}\n\n\ntrainer_local.virtualized = false;\n\ntrainer_local.render_window();"]}