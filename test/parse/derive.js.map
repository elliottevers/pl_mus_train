{"version":3,"file":"derive.js","sourceRoot":"","sources":["derive.ts"],"names":[],"mappings":"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","sourcesContent":["import sinon = require(\"sinon\");\nimport {note as n, note} from \"../../src/note/note\";\nimport Note = note.Note;\nimport TreeModel = require(\"tree-model\");\nimport {begin_train_export, set_depth_tree_export, add_to_tree_export} from \"../../src/scripts/parse_tree\";\nimport {message} from \"../../src/message/messenger\";\nimport Messenger = message.Messenger;\n// import {song} from \"../../src/song/song\";\n// import Song = song.Song;\n// import SongDao = song.SongDao;\n\n\nlet song = {\n    set_overdub: (int) => {},\n    set_session_record: (int) => {}\n};\n\nlet clip_user_input = {\n    fire: () => {},\n    stop: () => {},\n    set_endpoints_loop: (former, latter) => {}\n};\n\n\nlet tree: TreeModel = new TreeModel();\n\nlet notes_segments;\n\n// let note_1_1 = tree.parse(\n//     {\n//         id: -1, // TODO: hashing scheme for clip id and beat start\n//         note: new n.Note(\n//             48,\n//             0,\n//             48 + 16,\n//             90,\n//             0\n//         ),\n//         children: [\n//\n//         ]\n//     }\n// );\n\nlet note_2_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            48,\n            0,\n            16,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_2_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            49,\n            16,\n            32,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_2_3 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            50,\n            48,\n            16,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            2,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            53,\n            8,\n            3,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_3 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            48,\n            17,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_4 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            50,\n            42,\n            6,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nnotes_segments = [note_2_1, note_2_2, note_2_3];\n\n// notes_segments = [note_2_1, note_2_2];\n\nset_depth_tree_export(3);\nlet env: string;\nenv = 'node';\n// env = 'node_for_max';\n\n// let messenger = new Messenger(node, 0);\nlet messenger = new Messenger(env, 0);\n\n\nbegin_train_export(notes_segments, clip_user_input, song, add_to_tree_export, messenger);\n\n// add_to_tree(\n//     note_1_1\n// )\n//\nadd_to_tree_export(\n    [note_3_1, note_3_2],\n    note_2_1.model.note.beat_start,\n    note_2_1.model.note.get_beat_end(),\n    clip_user_input,\n    song,\n    messenger\n);\n\nadd_to_tree_export(\n    [note_3_3, note_3_4],\n    note_2_2.model.note.beat_start,\n    note_2_2.model.note.get_beat_end(),\n    clip_user_input,\n    song,\n    messenger\n);\n// add_to_tree(note_2_2)\n// add_to_tree(note_2_3)\n\n// add_to_tree(note_3_1)\n// add_to_tree(note_3_2)\n// add_to_tree(note_3_3)\n//\n// add_to_tree(note_3_4)\n// add_to_tree(note_3_5)\n// add_to_tree(note_3_6)\n"]}