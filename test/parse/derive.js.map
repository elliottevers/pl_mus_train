{"version":3,"file":"derive.js","sourceRoot":"","sources":["derive.ts"],"names":[],"mappings":"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","sourcesContent":["import {note as n, note} from \"../../src/note/note\";\nimport TreeModel = require(\"tree-model\");\nimport {begin_train_export, set_depth_tree_export, add_to_tree_export} from \"../../src/scripts/parse_tree\";\nimport {message} from \"../../src/message/messenger\";\nimport Messenger = message.Messenger;\n\n// stubs\nlet song = {\n    set_overdub: (int) => {},\n    set_session_record: (int) => {}\n};\n\nlet clip_user_input = {\n    fire: () => {},\n    stop: () => {},\n    set_endpoints_loop: (former, latter) => {}\n};\n\n\nlet tree: TreeModel = new TreeModel();\n\nlet notes_segments;\n\nlet note_2_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            48,\n            0,\n            16,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_2_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            49,\n            16,\n            32,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_2_3 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            50,\n            48,\n            16,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            2,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            53,\n            8,\n            3,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_3 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            48,\n            17,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_4 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            50,\n            42,\n            6,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_5 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            40,\n            54,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_3_6 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            45,\n            59,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_4_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            7,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_4_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            25,\n            3,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nnotes_segments = [note_2_1, note_2_2, note_2_3];\n\nset_depth_tree_export(4);\n\nlet env: string;\nenv = 'node';\n// env = 'node_for_max';\n// const Max = require('max-api');\n\nlet messenger = new Messenger(env, 0);\n\n\nbegin_train_export(notes_segments, clip_user_input, song, add_to_tree_export, messenger);\n\nadd_to_tree_export(\n    [note_3_1, note_3_2],\n    note_2_1.model.note.beat_start,\n    note_2_1.model.note.get_beat_end(),\n    clip_user_input,\n    song,\n    messenger\n);\n\nadd_to_tree_export(\n    [note_3_3, note_3_4],\n    note_2_2.model.note.beat_start,\n    note_2_2.model.note.get_beat_end(),\n    clip_user_input,\n    song,\n    messenger\n);\n\nadd_to_tree_export(\n    [note_3_5, note_3_6],\n    note_2_3.model.note.beat_start,\n    note_2_3.model.note.get_beat_end(),\n    clip_user_input,\n    song,\n    messenger\n);\n\nadd_to_tree_export(\n    [note_4_1],\n    note_2_1.model.note.beat_start,\n    note_2_1.model.note.get_beat_end(),\n    clip_user_input,\n    song,\n    messenger\n);\n\nadd_to_tree_export(\n    [note_4_2],\n    note_2_2.model.note.beat_start,\n    note_2_2.model.note.get_beat_end(),\n    clip_user_input,\n    song,\n    messenger\n);\n"]}