{"version":3,"file":"parse.js","sourceRoot":"","sources":["parse.ts"],"names":[],"mappings":";;AAAA,4CAA8C;AAC9C,sCAAyC;AACzC,2DAAwD;AACxD,IAAO,gBAAgB,GAAG,uBAAU,CAAC,gBAAgB,CAAC;AACtD,yDAAoD;AACpD,IAAO,SAAS,GAAG,mBAAO,CAAC,SAAS,CAAC;AACrC,4CAAyC;AACzC,IAAO,eAAe,GAAG,WAAI,CAAC,eAAe,CAAC;AAC9C,4CAAyC;AACzC,IAAO,IAAI,GAAG,WAAI,CAAC,IAAI,CAAC;AACxB,uDAAoD;AAIpD,kDAA+C;AAC/C,IAAO,YAAY,GAAG,eAAM,CAAC,YAAY,CAAC;AAC1C,mDAAgD;AAChD,IAAO,OAAO,GAAG,iBAAO,CAAC,OAAO,CAAC;AACjC,2DAA2E;AAC3E,IAAO,KAAK,GAAG,yBAAa,CAAC,KAAK,CAAC;AACnC,IAAO,KAAK,GAAG,qBAAS,CAAC,KAAK,CAAC;AAC/B,IAAO,SAAS,GAAG,yBAAa,CAAC,SAAS,CAAC;AAC3C,+CAA4C;AAC5C,IAAO,eAAe,GAAG,aAAK,CAAC,eAAe,CAAC;AAC/C,IAAO,KAAK,GAAG,aAAK,CAAC,KAAK,CAAC;AAC3B,4CAAyC;AACzC,IAAO,cAAc,GAAG,WAAI,CAAC,cAAc,CAAC;AAC5C,+CAA4D;AAC5D,IAAO,KAAK,GAAG,aAAY,CAAC,KAAK,CAAC;AAClC,IAAO,IAAI,GAAG,WAAI,CAAC,IAAI,CAAC;AACxB,IAAO,eAAe,GAAG,aAAY,CAAC,eAAe,CAAC;AAGtD,IAAI,IAAI,GAAc,IAAI,SAAS,EAAE,CAAC;AAEtC,IAAI,oBAAoB,GAAG,IAAI,CAAC,KAAK,CACjC;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAEF,IAAI,oBAAoB,GAAG,IAAI,CAAC,KAAK,CACjC;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAGF,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAC1B;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAEF,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAC1B;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAIF,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAC1B;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAEF,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAC1B;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAGF,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAC1B;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAEF,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAC1B;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAIF,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAC1B;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAEF,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAC1B;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAIF,IAAI,oBAAoB,GAAG,IAAI,CAAC,KAAK,CACjC;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAEF,IAAI,oBAAoB,GAAG,IAAI,CAAC,KAAK,CACjC;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAIF,IAAI,oBAAoB,GAAG,IAAI,CAAC,KAAK,CACjC;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAEF,IAAI,oBAAoB,GAAG,IAAI,CAAC,KAAK,CACjC;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAIF,IAAI,wBAAwB,GAAG,IAAI,CAAC,KAAK,CACrC;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAEF,IAAI,wBAAwB,GAAG,IAAI,CAAC,KAAK,CACrC;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAEF,mEAAmE;AACnE,IAAI,oBAAoB,GAAG,IAAI,CAAC,KAAK,CACjC;IACI,EAAE,EAAE,CAAC,CAAC;IACN,IAAI,EAAE,IAAI,WAAC,CAAC,IAAI,CACZ,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,EACF,CAAC,CACJ;IACD,QAAQ,EAAE,EAET;CACJ,CACJ,CAAC;AAGF,IAAI,kBAAkB,GAAG,SAAS,CAAC;AAEnC,IAAI,kBAAkB,GAAG,KAAK,CAAC;AAE/B,IAAI,wBAAwB,GAAG,IAAI,gBAAgB,CAC/C,kBAAkB,EAClB,kBAAkB,CACrB,CAAC;AAEF,IAAI,SAAS,GAAW,cAAc,CAAC;AACvC,sBAAsB;AAGtB,IAAI,eAAe,GAAG,IAAI,SAAS,CAAC,SAAS,EAAE,CAAC,EAAE,cAAc,CAAC,CAAC;AAElE,IAAI,qBAAqB,GAAG,IAAI,KAAK,EAEpC,CAAC;AAEF,qBAAqB,CAAC,SAAS,CAC3B,CAAC,CACJ,CAAC;AAEF,IAAI,kBAAkB,GAAG,IAAI,YAAY,CACrC,GAAG,EACH,GAAG,EACH,eAAe,CAClB,CAAC;AAWF,IAAI,KAAK,EAAE,MAAM,CAAC;AAElB,MAAM,GAAG,EAAE,CAAC;AAEZ,KAAK,GAAG,IAAI,KAAK,CACb,IAAI,eAAe,EAElB,CACJ,CAAC;AAEF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEnB,KAAK,GAAG,IAAI,KAAK,CACb,IAAI,eAAe,EAElB,CACJ,CAAC;AAEF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEnB,IAAI,UAAU,GAAG,IAAI,IAAI,CACrB,IAAI,cAAc,CACd,MAAM,CACT,CACJ,CAAC;AAEF,0BAA0B;AAG1B,qCAAqC;AAErC,IAAI,gBAAgB,EAAE,eAAe,CAAC;AAEtC,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAG1B,gBAAgB,GAAG,IAAI,eAAe,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;AAE/D,gBAAgB,CAAC,UAAU,GAAG,CAAC,CAAC;AAEhC,gBAAgB,CAAC,QAAQ,GAAG,CAAC,CAAC;AAE9B,eAAe,GAAG,IAAI,IAAI,CACtB,gBAAgB,CACnB,CAAC;AAEF,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAIvC,gBAAgB,GAAG,IAAI,eAAe,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;AAE/D,gBAAgB,CAAC,UAAU,GAAG,CAAC,CAAC;AAEhC,gBAAgB,CAAC,QAAQ,GAAG,CAAC,CAAC;AAE9B,eAAe,GAAG,IAAI,IAAI,CACtB,gBAAgB,CACnB,CAAC;AAEF,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAIvC,IAAI,gBAAgB,GAAG,IAAI,KAAK,CAC5B,IAAI,eAAe,CACf,gBAAgB,CACnB,CACJ,CAAC;AAEF,cAAc;AAEd,IAAI,YAAY,GAAG,EAAE,CAAC;AAEtB,IAAI,WAAW,CAAC;AAEhB,gBAAgB,GAAG,IAAI,eAAe,CAClC;IACI,aAAa;IACb,aAAa;IACb,aAAa;IACb,aAAa;CAChB,CACJ,CAAC;AAEF,gBAAgB,CAAC,UAAU,GAAG,CAAC,CAAC;AAEhC,gBAAgB,CAAC,QAAQ,GAAG,CAAC,CAAC;AAE9B,WAAW,GAAG,IAAI,IAAI,CAClB,gBAAgB,CACnB,CAAC;AAEF,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAI/B,gBAAgB,GAAG,IAAI,eAAe,CAClC;IACI,aAAa;IACb,aAAa;IACb,aAAa;IACb,aAAa;CAChB,CACJ,CAAC;AAEF,gBAAgB,CAAC,UAAU,GAAG,CAAC,CAAC;AAEhC,gBAAgB,CAAC,QAAQ,GAAG,CAAC,CAAC;AAE9B,WAAW,GAAG,IAAI,IAAI,CAClB,gBAAgB,CACnB,CAAC;AAEF,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAG/B,IAAI,YAAY,GAAG,IAAI,KAAK,CACxB,IAAI,eAAe,CACf,YAAY,CACf,CACJ,CAAC;AAIF,IAAI,mBAAmB,GAAG,IAAI,OAAO,CACjC,kBAAkB,EAClB,wBAAwB,EACxB,qBAAqB,EACrB,YAAY,EACZ,gBAAgB,EAChB,UAAU,EACV,eAAe,CAClB,CAAC;AAEF,0CAA0C;AAE1C,mBAAmB,CAAC,QAAQ,EAE3B,CAAC;AAEF,mBAAmB,CAAC,YAAY,CAC5B,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,CAC/C,CAAC;AAEF,mBAAmB,CAAC,YAAY,CAC5B,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,CAC/C,CAAC;AAEF,qCAAqC;AACrC,EAAE;AACF,KAAK;AAGL,oCAAoC;AACpC,EAAE;AACF,KAAK;AACL,EAAE;AACF,wCAAwC;AACxC,gBAAgB;AAChB,KAAK;AACL,EAAE;AACF,wBAAwB;AACxB,2BAA2B;AAC3B,6GAA6G;AAC7G,KAAK;AACL,EAAE;AACF,sCAAsC;AACtC,gBAAgB;AAChB,KAAK;AACL,EAAE;AACF,uBAAuB;AACvB,oCAAoC;AACpC,sDAAsD;AACtD,0CAA0C;AAC1C,gDAAgD;AAChD,wEAAwE;AACxE,gDAAgD;AAChD,0BAA0B;AAC1B,kCAAkC;AAClC,oCAAoC;AACpC,uBAAuB;AACvB,KAAK;AACL,EAAE;AACF,8CAA8C;AAC9C,8GAA8G;AAC9G,mBAAmB;AACnB,KAAK;AACL,EAAE;AACF,oCAAoC;AACpC,EAAE;AACF,KAAK","sourcesContent":["import {note as n} from \"../../src/note/note\";\nimport TreeModel = require(\"tree-model\");\nimport {user_input} from \"../../src/control/user_input\";\nimport UserInputHandler = user_input.UserInputHandler;\nimport {message} from \"../../src/message/messenger\";\nimport Messenger = message.Messenger;\nimport {live} from \"../../src/live/live\";\nimport LiveClipVirtual = live.LiveClipVirtual;\nimport {clip} from \"../../src/clip/clip\";\nimport Clip = clip.Clip;\nimport {algorithm} from \"../../src/train/algorithm\";\nimport {freeze, thaw} from \"../../src/serialize/serialize\";\nimport TrainFreezer = freeze.TrainFreezer;\nimport TrainThawer = thaw.TrainThawer;\nimport {window} from \"../../src/render/window\";\nimport MatrixWindow = window.MatrixWindow;\nimport {trainer} from \"../../src/train/trainer\";\nimport Trainer = trainer.Trainer;\nimport {modes_control, modes_texture} from \"../../src/constants/constants\";\nimport VOCAL = modes_control.VOCAL;\nimport Parse = algorithm.Parse;\nimport MONOPHONY = modes_texture.MONOPHONY;\nimport {track} from \"../../src/track/track\";\nimport TrackDaoVirtual = track.TrackDaoVirtual;\nimport Track = track.Track;\nimport {song} from \"../../src/song/song\";\nimport SongDaoVirtual = song.SongDaoVirtual;\nimport {scene as module_scene} from \"../../src/scene/scene\";\nimport Scene = module_scene.Scene;\nimport Song = song.Song;\nimport SceneDaoVirtual = module_scene.SceneDaoVirtual;\n\n\nlet tree: TreeModel = new TreeModel();\n\nlet segment_note_1_parse = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            0,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet segment_note_2_parse = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            4,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\nlet note_melody_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            0,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            53,\n            1,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_melody_3 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            55,\n            2,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_4 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            56,\n            3,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\nlet note_melody_5 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            4,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_6 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            53,\n            5,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_melody_7 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            55,\n            6,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_8 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            56,\n            7,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_melody_parsed_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            0,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_parsed_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            53,\n            2,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_melody_parsed_3 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            55,\n            4,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_parsed_4 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            56,\n            6,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_summarized_melody_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            0,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_summarized_melody_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            55,\n            4,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n// TODO: shouldn't this be automatically determined by the trainer?\nlet note_summarized_root = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            1,\n            8,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\nlet mode_texture_parse = MONOPHONY;\n\nlet mode_control_parse = VOCAL;\n\nlet user_input_handler_parse = new UserInputHandler(\n    mode_texture_parse,\n    mode_control_parse\n);\n\nlet env_parse: string = 'node_for_max';\n// env_parse = 'node';\n\n\nlet messenger_parse = new Messenger(env_parse, 0, 'render_parse');\n\nlet algorithm_train_parse = new Parse(\n\n);\n\nalgorithm_train_parse.set_depth(\n    3\n);\n\nlet window_local_parse = new MatrixWindow(\n    384,\n    384,\n    messenger_parse\n);\n\n\n\n\n\n\n\n\n\n\nlet scene, scenes;\n\nscenes = [];\n\nscene = new Scene(\n    new SceneDaoVirtual(\n\n    )\n);\n\nscenes.push(scene);\n\nscene = new Scene(\n    new SceneDaoVirtual(\n\n    )\n);\n\nscenes.push(scene);\n\nlet song_parse = new Song(\n    new SongDaoVirtual(\n        scenes\n    )\n);\n\n// let num_clip_slots = 2;\n\n\n// USER INPUT CLIP - HAS THE SEGMENTS\n\nlet clip_dao_virtual, clip_user_input;\n\nlet clips_user_input = [];\n\n\nclip_dao_virtual = new LiveClipVirtual([segment_note_1_parse]);\n\nclip_dao_virtual.beat_start = 0;\n\nclip_dao_virtual.beat_end = 4;\n\nclip_user_input = new Clip(\n    clip_dao_virtual\n);\n\nclips_user_input.push(clip_user_input);\n\n\n\nclip_dao_virtual = new LiveClipVirtual([segment_note_2_parse]);\n\nclip_dao_virtual.beat_start = 4;\n\nclip_dao_virtual.beat_end = 8;\n\nclip_user_input = new Clip(\n    clip_dao_virtual\n);\n\nclips_user_input.push(clip_user_input);\n\n\n\nlet track_user_input = new Track(\n    new TrackDaoVirtual(\n        clips_user_input\n    )\n);\n\n// TARGET CLIP\n\nlet clips_target = [];\n\nlet clip_target;\n\nclip_dao_virtual = new LiveClipVirtual(\n    [\n        note_melody_1,\n        note_melody_2,\n        note_melody_3,\n        note_melody_4\n    ]\n);\n\nclip_dao_virtual.beat_start = 0;\n\nclip_dao_virtual.beat_end = 4;\n\nclip_target = new Clip(\n    clip_dao_virtual\n);\n\nclips_target.push(clip_target);\n\n\n\nclip_dao_virtual = new LiveClipVirtual(\n    [\n        note_melody_5,\n        note_melody_6,\n        note_melody_7,\n        note_melody_8\n    ]\n);\n\nclip_dao_virtual.beat_start = 4;\n\nclip_dao_virtual.beat_end = 8;\n\nclip_target = new Clip(\n    clip_dao_virtual\n);\n\nclips_target.push(clip_target);\n\n\nlet track_target = new Track(\n    new TrackDaoVirtual(\n        clips_target\n    )\n);\n\n\n\nlet trainer_local_parse = new Trainer(\n    window_local_parse,\n    user_input_handler_parse,\n    algorithm_train_parse,\n    track_target,\n    track_user_input,\n    song_parse,\n    messenger_parse\n);\n\n// test case - 2 segments, 2 notes a piece\n\ntrainer_local_parse.commence(\n\n);\n\ntrainer_local_parse.accept_input(\n    [note_melody_parsed_1, note_melody_parsed_2]\n);\n\ntrainer_local_parse.accept_input(\n    [note_melody_parsed_3, note_melody_parsed_4]\n);\n\n// trainer_local_parse.render_window(\n//\n// );\n\n\n// trainer_local_parse.clear_window(\n//\n// );\n//\n// let freezer_parse = new TrainFreezer(\n//     env_parse\n// );\n//\n// freezer_parse.freeze(\n//     trainer_local_parse,\n//     '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train_parse.json'\n// );\n//\n// let thawer_parse = new TrainThawer(\n//     env_parse\n// );\n//\n// let config_parse = {\n//     'window': window_local_parse,\n//     'user_input_handler': user_input_handler_parse,\n//     'algorithm': algorithm_train_parse,\n//     'clip_user_input': clip_user_input_parse,\n//     'clip_user_input_synchronous': clip_user_input_parse_synchronous,\n//     'clip_target': clip_target_virtual_parse,\n//     'song': song_parse,\n//     'segments': segments_parse,\n//     'messenger': messenger_parse,\n//     'env': env_parse\n// };\n//\n// let train_thawed_parse = thawer_parse.thaw(\n//     '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train_parse.json',\n//     config_parse\n// );\n//\n// train_thawed_parse.render_window(\n//\n// );"]}