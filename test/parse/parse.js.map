{"version":3,"file":"parse.js","sourceRoot":"","sources":["parse.ts"],"names":[],"mappings":"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","sourcesContent":["import {note as n} from \"../../src/note/note\";\nimport TreeModel = require(\"tree-model\");\nimport {user_input} from \"../../src/control/user_input\";\nimport UserInputHandler = user_input.UserInputHandler;\nimport {message} from \"../../src/message/messenger\";\nimport Messenger = message.Messenger;\nimport {live as li, live} from \"../../src/live/live\";\nimport LiveClipVirtual = live.LiveClipVirtual;\nimport {segment} from \"../../src/segment/segment\";\nimport Segment = segment.Segment;\nimport {clip} from \"../../src/clip/clip\";\nimport Clip = clip.Clip;\nimport {algorithm} from \"../../src/train/algorithm\";\nimport {freeze, thaw} from \"../../src/serialize/serialize\";\nimport TrainFreezer = freeze.TrainFreezer;\nimport TrainThawer = thaw.TrainThawer;\nimport {window} from \"../../src/render/window\";\nimport MatrixWindow = window.MatrixWindow;\nimport {trainer} from \"../../src/train/trainer\";\nimport Trainer = trainer.Trainer;\nimport {modes_control, modes_texture} from \"../../src/constants/constants\";\nimport VOCAL = modes_control.VOCAL;\nimport Parse = algorithm.Parse;\nimport MONOPHONY = modes_texture.MONOPHONY;\n\n\nlet tree: TreeModel = new TreeModel();\n\n// let tree: TreeModel = new TreeModel();\n\nlet segment_note_1_parse = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            1,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet segment_note_2_parse = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            5,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\nlet note_melody_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            1,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            53,\n            2,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_melody_3 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            55,\n            3,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_4 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            56,\n            4,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\nlet note_melody_5 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            5,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_6 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            53,\n            6,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_melody_7 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            55,\n            7,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_8 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            56,\n            8,\n            1,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_melody_parsed_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            1,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_parsed_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            53,\n            3,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_melody_parsed_3 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            55,\n            5,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_melody_parsed_4 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            56,\n            7,\n            2,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\n\nlet note_summarized_melody_1 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            1,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_summarized_melody_2 = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            55,\n            5,\n            4,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\nlet note_summarized_root = tree.parse(\n    {\n        id: -1, // TODO: hashing scheme for clip id and beat start\n        note: new n.Note(\n            51,\n            1,\n            8,\n            90,\n            0\n        ),\n        children: [\n\n        ]\n    }\n);\n\n\nlet mode_texture_parse = MONOPHONY;\n\nlet mode_control_parse = VOCAL;\n\nlet user_input_handler_parse = new UserInputHandler(\n    mode_texture_parse,\n    mode_control_parse\n);\n\nlet env_parse: string = 'node_for_max';\n// env_parse = 'node';\n\n\nlet messenger_parse = new Messenger(env_parse, 0, 'render_parse');\n\nlet algorithm_train_parse = new Parse(\n    user_input_handler_parse\n);\n\nlet window_local_parse = new MatrixWindow(\n    384,\n    384,\n    messenger_parse,\n    algorithm_train_parse\n);\n\nalgorithm_train_parse.set_depth(\n    3\n);\n\n// stubs\nlet song_parse = {\n    set_overdub: (int) => {},\n    set_session_record: (int) => {},\n    stop: () => {}\n};\n\nlet clip_user_input_parse = {\n    fire: () => {},\n    stop: () => {},\n    set_endpoints_loop: (former, latter) => {}\n};\n\nlet clip_user_input_parse_synchronous = {\n    fire: () => {},\n    stop: () => {},\n    set_endpoints_loop: (former, latter) => {}\n};\n\nlet scene = {\n    fire: () => {},\n    // stop: () => {},\n    // set_endpoints_loop: (former, latter) => {}\n};\n\nlet notes_segments_parse = [\n    segment_note_1_parse,\n    segment_note_2_parse\n];\n\nlet notes_target_clip_parse = [\n    note_melody_1,\n    note_melody_2,\n    note_melody_3,\n    note_melody_4,\n    note_melody_5,\n    note_melody_6,\n    note_melody_7,\n    note_melody_8\n];\n\nlet segments_parse: Segment[] = [];\n\nfor (let note of notes_segments_parse) {\n    let segment = new Segment(\n        note\n    );\n\n    // @ts-ignore\n    segment.set_scene(scene);\n\n    segments_parse.push(\n        segment\n    )\n\n\n    // let note = notes_segments[Number(i_note)];\n    // let path_scene = ['live_set', 'scenes', Number(i_note)].join(' ');\n    // let segment_local = new Segment(\n    //     note\n    // );\n    // segment_local.set_scene(\n    //     new Scene(\n    //         new SceneDao(\n    //             new li.LiveApiJs(\n    //                 path_scene\n    //             )\n    //         )\n    //     )\n    // );\n}\n\nlet clip_dao_virtual_parse = new LiveClipVirtual(notes_target_clip_parse);\n\nlet clip_target_virtual_parse = new Clip(clip_dao_virtual_parse);\n\nlet trainer_local_parse = new Trainer(\n    window_local_parse,\n    user_input_handler_parse,\n    algorithm_train_parse,\n    clip_user_input_parse,\n    clip_user_input_parse_synchronous,\n    // clip_target_virtual_parse.get_notes(\n    //     clip_target_virtual_parse.get_beat_start(),\n    //     0,\n    //     clip_target_virtual_parse.get_beat_end(),\n    //     128\n    // ),\n    notes_target_clip_parse,\n    song_parse,\n    segments_parse,\n    messenger_parse\n);\n\n// test case - 2 segments, 2 notes a piece\n\ntrainer_local_parse.init(\n\n);\n\ntrainer_local_parse.accept_input(\n    [note_melody_parsed_1, note_melody_parsed_2]\n);\n\ntrainer_local_parse.accept_input(\n    [note_melody_parsed_3, note_melody_parsed_4]\n);\n\n// trainer_local_parse.render_window(\n//\n// );\n\n\n// trainer_local_parse.clear_window(\n//\n// );\n//\n// let freezer_parse = new TrainFreezer(\n//     env_parse\n// );\n//\n// freezer_parse.freeze(\n//     trainer_local_parse,\n//     '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train_parse.json'\n// );\n//\n// let thawer_parse = new TrainThawer(\n//     env_parse\n// );\n//\n// let config_parse = {\n//     'window': window_local_parse,\n//     'user_input_handler': user_input_handler_parse,\n//     'algorithm': algorithm_train_parse,\n//     'clip_user_input': clip_user_input_parse,\n//     'clip_user_input_synchronous': clip_user_input_parse_synchronous,\n//     'clip_target': clip_target_virtual_parse,\n//     'song': song_parse,\n//     'segments': segments_parse,\n//     'messenger': messenger_parse,\n//     'env': env_parse\n// };\n//\n// let train_thawed_parse = thawer_parse.thaw(\n//     '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_ts/cache/train_parse.json',\n//     config_parse\n// );\n//\n// train_thawed_parse.render_window(\n//\n// );"]}