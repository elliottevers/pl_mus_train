{"version":3,"file":"messenger.js","sourceRoot":"","sources":["messenger.ts"],"names":[],"mappings":";;AAEA,IAAiB,OAAO,CA+DvB;AA/DD,WAAiB,SAAO;IAEpB;QAQI,mBAAa,GAAW,EAAE,MAAc,EAAE,SAAkB;YACxD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC/B,CAAC;QAEM,iCAAa,GAApB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;QAED,2BAAO,GAAP,UAAQ,OAAc;YAElB,QAAQ,IAAI,CAAC,GAAG,EAAE;gBACd,KAAK,KAAK,CAAC,CAAC;oBACR,IAAI,IAAI,CAAC,SAAS,EAAE;wBAChB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBACnC;oBACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;oBAC1B,MAAM;iBACT;gBACD,KAAK,MAAM,CAAC,CAAC;oBACT,IAAI,IAAI,CAAC,SAAS,EAAE;wBAChB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBACnC;oBACD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;oBAC3B,MAAM;iBACT;gBACD,KAAK,cAAc,CAAC,CAAC;oBACjB,IAAI,IAAI,CAAC,SAAS,EAAE;wBAChB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBACnC;oBACD,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;oBACnC,MAAM;iBACT;aACJ;QACL,CAAC;QAED,+BAAW,GAAX,UAAY,OAAc;YACtB,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjC,CAAC;QAED,gCAAY,GAAZ,UAAa,OAAc;YACvB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC;QAED,wCAAoB,GAApB,UAAqB,OAAc;YAC/B,kCAAkC;YAClC,uBAAuB;QAC3B,CAAC;QACL,gBAAC;IAAD,CAAC,AA5DD,IA4DC;IA5DY,mBAAS,YA4DrB,CAAA;AACL,CAAC,EA/DgB,OAAO,GAAP,eAAO,KAAP,eAAO,QA+DvB","sourcesContent":["declare function outlet(n: number, o: any): void;\n\nexport namespace message {\n\n    export class Messenger {\n\n        private env: string;\n\n        private outlet: number;\n\n        private key_route: string;\n\n        constructor (env: string, outlet: number, key_route?: string) {\n            this.env = env;\n            this.outlet = outlet;\n            this.key_route = key_route;\n        }\n\n        public get_key_route(): string {\n            return this.key_route;\n        }\n\n        message(message: any[]) {\n\n            switch (this.env) {\n                case 'max': {\n                    if (this.key_route) {\n                        message.unshift(this.key_route);\n                    }\n                    this.message_max(message);\n                    break;\n                }\n                case 'node': {\n                    if (this.key_route) {\n                        message.unshift(this.key_route);\n                    }\n                    this.message_node(message);\n                    break;\n                }\n                case 'node_for_max': {\n                    if (this.key_route) {\n                        message.unshift(this.key_route);\n                    }\n                    this.message_node_for_max(message);\n                    break;\n                }\n            }\n        }\n\n        message_max(message: any[]): void {\n            outlet(this.outlet, message);\n        }\n\n        message_node(message: any[]): void {\n            console.log(\"Messenger:\");\n            console.log(\"\\n\");\n            console.log(message);\n            console.log(\"\\n\");\n        }\n\n        message_node_for_max(message: any[]): void {\n            // const Max = require('max-api');\n            // Max.outlet(message);\n        }\n    }\n}"]}