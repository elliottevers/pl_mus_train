{"version":3,"file":"command_shell.js","sourceRoot":"","sources":["command_shell.ts"],"names":[],"mappings":"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","sourcesContent":["// declare let Global: any;\n// TODO: make dedicated library object for the following\nimport {message} from \"./message/messenger\";\nimport Messenger = message.Messenger;\nimport {log} from \"./log/logger\";\nimport Logger = log.Logger;\nimport {cli} from \"./cli/cli\";\n\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'node';\n\nif (env === 'max') {\n    autowatch = 1;\n}\n\n////////////////////\n\nlet messenger: Messenger;\n\nlet logger: Logger;\n\nlet outlet_shell_obj = 0;\n\nlet executables = [];\n\nlet executable: cli.Executable;\n\nlet dir = '/Users/elliottevers/Documents/git-repos.nosync/music/';\n\nlet path_interpreter = dir + '.venv_36_test/bin/python';\n\nlet init = () => {\n\n    messenger = new Messenger(env, outlet_shell_obj);\n    logger = new Logger(env);\n\n    let arg_url = new cli.Arg('url');\n    let option_outfile = new cli.Option('o', true);\n    let flag_audio_only = new cli.Flag('x');\n\n    // /usr/local/bin/youtube-dl -x -o \\\"/Users/elliottevers/Documents/git-repos.nosync/audio/youtube/tswift_teardrops.%(ext)s\\\" https://www.youtube.com/watch?v=CbkvLYrEvF4\n\n    let executable_youtube_dl = new cli.Executable(\n        '/usr/local/bin/youtube-dl',\n        [flag_audio_only],\n        [option_outfile],\n        [arg_url],\n        messenger\n    );\n\n    executables.push(executable_youtube_dl);\n\n\n\n    let arg_file_out = new cli.Arg('file_out');\n\n    let option_file_input = new cli.Option('i');\n\n    // /usr/local/bin/ffmpeg -i /Users/elliottevers/Documents/git-repos.nosync/audio/youtube/tswift_teardrops.* /Users/elliottevers/Documents/git-repos.nosync/audio/youtube/tswift_teardrops.mp3\n\n    let executable_ffmpeg = new cli.Executable(\n        '/usr/local/bin/ffmpeg',\n        [],\n        [option_file_input],\n        [arg_file_out],\n        messenger\n    );\n\n    executables.push(executable_ffmpeg);\n\n};\n\nlet run_executable = (path_executable) => {\n    _lookup_executable(path_executable).run()\n};\n\n\nlet set_arg = (path_executable, name_arg, val_arg) => {\n    _lookup_executable(path_executable).get_arg(name_arg).set(val_arg);\n};\n\nlet set_flag = (path_executable, name_flag, val_flag) => {\n    _lookup_executable(path_executable).get_flag(name_flag).set(val_flag);\n};\n\nlet set_option = (path_executable, name_opt, val_opt) => {\n    _lookup_executable(path_executable).get_opt(name_opt).set(val_opt);\n};\n\nlet _lookup_executable = (path_executable) => {\n    return executables.filter((executable) => {\n        return executable.get_command_exec() === path_executable;\n    })[0];\n};\n\nlet get_cmd = (path_executable) => {\n    // return logger.log(\n    //     _lookup_executable(path_executable).get_run_command().split(' ')\n    // );\n    return _lookup_executable(path_executable).get_run_command().split(' ')\n\n};\n\nlet test = () => {\n\n    set_arg('/usr/local/bin/youtube-dl', 'url', 'https://www.youtube.com/watch?v=CbkvLYrEvF4');\n    set_option('/usr/local/bin/youtube-dl', 'o', '/Users/elliottevers/Documents/git-repos.nosync/audio/youtube/tswift_teardrops.%(ext)s');\n    set_flag('/usr/local/bin/youtube-dl', 'x', 1);\n\n\n    get_cmd('/usr/local/bin/youtube-dl');\n\n\n    set_arg('/usr/local/bin/ffmpeg', 'file_out', '/Users/elliottevers/Documents/git-repos.nosync/audio/youtube/tswift_teardrops.mp3');\n    set_option('/usr/local/bin/ffmpeg', 'i', '/Users/elliottevers/Documents/git-repos.nosync/audio/youtube/tswift_teardrops.*');\n\n    get_cmd('/usr/local/bin/ffmpeg');\n};\n\ninit();\ntest();\n\n\nif (typeof Global !== \"undefined\") {\n    Global.command_shell = {};\n    Global.command_shell.set_arg = set_arg;\n    Global.command_shell.set_option = set_option;\n    Global.command_shell.set_flag = set_flag;\n    Global.command_shell.init = init;\n    Global.command_shell.get_cmd = get_cmd;\n    Global.command_shell.run_executable = run_executable;\n    Global.command_shell.test = test;\n}\n"]}