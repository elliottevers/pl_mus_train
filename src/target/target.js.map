{"version":3,"file":"target.js","sourceRoot":"","sources":["target.ts"],"names":[],"mappings":";;AAKA,IAAiB,MAAM,CA8ItB;AA9ID,WAAiB,MAAM;IAEnB,6BAA6B;IAI7B;QAII,gBAAY,aAAyC;YACjD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAA;QACtC,CAAC;QAiIL,aAAC;IAAD,CAAC,AAvID,IAuIC;IAvIY,aAAM,SAuIlB,CAAA;AACL,CAAC,EA9IgB,MAAM,GAAN,cAAM,KAAN,cAAM,QA8ItB","sourcesContent":["import TreeModel = require(\"tree-model\");\nimport {note as n} from \"../note/note\"\nimport {phrase as p} from \"../phrase/phrase\"\n\n\nexport namespace target {\n\n    // let min_width_clip = 0.25;\n\n    export type TargetType = TreeModel.Node<n.Note>[][]\n\n    export class Target {\n\n        notes_grouped: TreeModel.Node<n.Note>[][];\n\n        constructor(notes_grouped: TreeModel.Node<n.Note>[][]) {\n            this.notes_grouped = notes_grouped\n        }\n\n\n    //     note: TreeModel.Node<n.Note>;\n    //     phrase: p.Phrase;\n    //\n    //     constructor(note: TreeModel.Node<n.Note>, phrase: p.Phrase) {\n    //         this.note = note;\n    //         this.phrase = phrase;\n    //     }\n    //\n    //     public value(): number {\n    //         return this.note.model.pitch;\n    //     }\n    //\n    //     public get_note_interval_beats(): number[] {\n    //         return this.note.model.get_interval_beats();\n    //     }\n    //\n    //     public get_phrase_interval_beats(): number[] {\n    //         return this.phrase.get_interval_beats();\n    //     }\n    //\n    //     // TODO: annotate\n    //     public set_note_interval_beats(note_interval_beats: number[], reverse: boolean) {\n    //         let beat_lower = note_interval_beats[0];\n    //         let beat_upper = note_interval_beats[1];\n    //\n    //         if (beat_upper - beat_lower < min_width_clip) {\n    //             beat_upper = beat_lower + min_width_clip;\n    //         }\n    //\n    //         if (reverse) {\n    //             this.phrase.clip.set_clip_endpoint_upper(beat_upper);\n    //             this.phrase.clip.set_clip_endpoint_lower(beat_lower);\n    //         } else {\n    //             this.phrase.clip.set_clip_endpoint_lower(beat_lower);\n    //             this.phrase.clip.set_clip_endpoint_upper(beat_upper);\n    //         }\n    //     }\n    //\n    //     public set_phrase_interval_beats(phrase_interval_beats: number[], reverse: boolean) {\n    //         let beat_lower = phrase_interval_beats[0];\n    //         let beat_upper = phrase_interval_beats[1];\n    //         if (reverse) {\n    //             this.phrase.clip.set_loop_bracket_upper(beat_upper);\n    //             this.phrase.clip.set_loop_bracket_lower(beat_lower);\n    //         } else {\n    //             this.phrase.clip.set_loop_bracket_lower(beat_lower);\n    //             this.phrase.clip.set_loop_bracket_upper(beat_upper);\n    //         }\n    //     }\n    // }\n    //\n    // export class TargetIterator {\n    //     phrase_iterator: p.PhraseIterator;\n    //     i: number;\n    //     current: any;\n    //\n    //     // TODO: figure out how to annotate\n    //     next() {\n    //         this.i += 1;\n    //\n    //         var phrase_current = this.phrase_iterator.current();\n    //\n    //         var note_result_next = phrase_current.note_iterator.next();\n    //\n    //         var note_next = note_result_next.value;\n    //\n    //         if (!note_result_next.done) {\n    //             this.current = new Target(note_next, phrase_current);\n    //             return {\n    //                 value: this.current,\n    //                 done: false\n    //             }\n    //         }\n    //\n    //         var phrase_result_next = this.phrase_iterator.next();\n    //\n    //         if (!phrase_result_next.done) { // note_next.done is true by now\n    //             var phrase_next = this.phrase_iterator.current();\n    //\n    //             note_result_next = phrase_next.note_iterator.next();\n    //\n    //             note_next = note_result_next.value;\n    //\n    //             this.current = new Target(note_next, phrase_next);\n    //\n    //             return {\n    //                 value: this.current,\n    //                 done: false\n    //             }\n    //         }\n    //\n    //         return {\n    //             value: null,\n    //             done: true\n    //         }\n    //     }\n    //\n    //     set_note_interval_beats(): void {\n    //         // TODO: use direction in logic\n    //         if (this.phrase_iterator.current() !== null) {\n    //             var direction_forward = this.phrase_iterator.current().note_iterator.direction_forward;\n    //         }\n    //         var reverse;\n    //         var note_interval = this.current.get_note_interval_beats();\n    //\n    //         if (this.i === 0) {\n    //             this.current.set_note_interval_beats(note_interval);\n    //         } else {\n    //             reverse = true;\n    //             this.current.set_note_interval_beats(note_interval, reverse);\n    //         }\n    //     }\n    //\n    //     set_phrase_interval_beats(): void {\n    //         // TODO: use direction in logic\n    //         var direction_forward = this.phrase_iterator.direction_forward;\n    //         var reverse;\n    //         var phrase_interval_beats = this.current.get_phrase_interval_beats();\n    //\n    //         if (this.i === 0) {\n    //             this.current.set_phrase_interval_beats(phrase_interval_beats);\n    //         } else {\n    //             reverse = true;\n    //             this.current.set_phrase_interval_beats(phrase_interval_beats, reverse);\n    //         }\n    //     }\n    }\n}"]}