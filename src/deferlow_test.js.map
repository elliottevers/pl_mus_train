{"version":3,"file":"deferlow_test.js","sourceRoot":"","sources":["deferlow_test.ts"],"names":[],"mappings":";;AAAA,oCAAsC;AACtC,iDAAiD;AACjD,oCAA6C;AAQ7C,IAAI,GAAG,GAAW,KAAK,CAAC;AAExB,IAAI,GAAG,KAAK,KAAK,EAAE;IACf,SAAS,GAAG,CAAC,CAAC;CACjB;AAED,IAAI,sBAAiC,CAAC;AAEtC,sBAAsB,GAAG,IAAI,WAAE,CAAC,SAAS,CACrC,kBAAkB,GAAG,EAAE,GAAG,cAAc,GAAG,CAAC,GAAG,OAAO,CACzD,CAAC;AAEF,IAAI,kBAAkB,GAAG,IAAI,WAAC,CAAC,IAAI,CAC/B,IAAI,WAAC,CAAC,OAAO,CACT,sBAAsB,EACtB,IAAI,mBAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EACvB,KAAK,CACR,CACJ,CAAC;AAEF,IAAI,mBAA8B,CAAC;AAEnC,mBAAmB,GAAG,IAAI,WAAE,CAAC,SAAS,CAClC,kBAAkB,GAAG,EAAE,GAAG,cAAc,GAAG,CAAC,GAAG,OAAO,CACzD,CAAC;AAEF,IAAI,eAAe,GAAG,IAAI,WAAC,CAAC,IAAI,CAC5B,IAAI,WAAC,CAAC,OAAO,CACT,mBAAmB,EACnB,IAAI,mBAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EACvB,KAAK,CACR,CACJ,CAAC;AAEF,IAAI,KAAK,GAAG,UAAC,sBAAsB;IAC/B,eAAe,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,IAAI,GAAG,GAAG;IACN,kBAAkB,CAAC,SAAS,CACxB,eAAe,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAC1C,CAAA;AACL,CAAC,CAAC;AAEF,IAAI,GAAG,GAAG;IACN,IAAI,KAAK,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACpD,KAAiB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;QAAnB,IAAI,IAAI,cAAA;QACT,IAAI,CAAC,YAAY,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,CAAC;QACX,IAAI,CAAC,OAAO,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,CAAC;KACd;AACL,CAAC,CAAC;AAGF,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;IACnC,MAAM,CAAC,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC;IAC/B,MAAM,CAAC,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC;CAClC","sourcesContent":["import {clip as c} from \"./clip/clip\";\nimport {message as m} from \"./message/messenger\";\nimport {live as li, live} from \"./live/live\";\nimport LiveApiJs = live.LiveApiJs;\nimport {note} from \"./note/note\";\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'max';\n\nif (env === 'max') {\n    autowatch = 1;\n}\n\nlet live_api_summarization: LiveApiJs;\n\nlive_api_summarization = new li.LiveApiJs(\n    \"live_set tracks \" + 18 + \" clip_slots \" + 0 + \" clip\"\n);\n\nlet clip_summarization = new c.Clip(\n    new c.ClipDao(\n        live_api_summarization,\n        new m.Messenger(env, 0),\n        false\n    )\n);\n\nlet live_api_user_input: LiveApiJs;\n\nlive_api_user_input = new li.LiveApiJs(\n    \"live_set tracks \" + 17 + \" clip_slots \" + 0 + \" clip\"\n);\n\nlet clip_user_input = new c.Clip(\n    new c.ClipDao(\n        live_api_user_input,\n        new m.Messenger(env, 0),\n        false\n    )\n);\n\nlet reset = (index_track_user_input) => {\n    clip_user_input.remove_notes(0, 0, 2, 128);\n};\n\nlet set = () => {\n    clip_summarization.set_notes(\n        clip_user_input.get_notes(0, 0, 2, 128)\n    )\n};\n\nlet get = () => {\n    let notes = clip_user_input.get_notes(0, 0, 2, 128);\n    for (let node of notes) {\n        post(\"beat_start\");\n        post(\"\\n\");\n        post(node.model.note.beat_start);\n        post(\"\\n\");\n        post(\"pitch\");\n        post(\"\\n\");\n        post(node.model.note.pitch);\n        post(\"\\n\");\n    }\n};\n\n\nif (typeof Global !== \"undefined\") {\n    Global.deferlow_test = {};\n    Global.deferlow_test.reset = reset;\n    Global.deferlow_test.get = get;\n    Global.deferlow_test.set = set;\n}"]}