{"version":3,"file":"clip_exporter.js","sourceRoot":"","sources":["clip_exporter.ts"],"names":[],"mappings":";;AAAA,kDAA2D;AAC3D,IAAO,SAAS,GAAG,mBAAO,CAAC,SAAS,CAAC;AACrC,qCAA8C;AAC9C,qCAAuC;AAIvC,+BAA4B;AAC5B,IAAO,QAAQ,GAAG,OAAE,CAAC,QAAQ,CAAC;AAC9B,wCAAqC;AAarC,IAAI,GAAG,GAAW,KAAK,CAAC;AAExB,IAAI,GAAG,KAAK,KAAK,EAAE;IACf,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC7B,SAAS,GAAG,CAAC,CAAC;CACjB;AAED,IAAI,YAAY,GAAG,sFAAsF,CAAC;AAE1G,IAAI,cAAc,GAAG,YAAY,GAAG,gBAAgB,CAAC;AAErD,IAAI,QAAQ,GAAG,IAAI,QAAQ,CACvB,cAAc,CACjB,CAAC;AAEF,IAAI,UAAU,GAAG,IAAI,aAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAEnC,IAAI,UAAU,GAAG;IACb,IAAI,gBAAgB,GAAG,IAAI,WAAE,CAAC,SAAS,CACnC,0CAA0C,CAC7C,CAAC;IAEF,QAAQ,CAAC,UAAU,CACf,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CACjC,CAAC;AAEN,CAAC,CAAC;AAEF,IAAI,SAAS,GAAG;IACZ,IAAI,IAAI,GAAG,IAAI,WAAE,CAAC,SAAS,CACvB,UAAU,CACb,CAAC;IAEF,QAAQ,CAAC,SAAS,CACd,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CACpB,CAAC;AACN,CAAC,CAAC;AAEF,6BAA6B;AAC7B,EAAE;AACF,mCAAmC;AACnC,qBAAqB;AACrB,SAAS;AACT,EAAE;AACF,+CAA+C;AAC/C,qDAAqD;AACrD,SAAS;AACT,EAAE;AACF,6BAA6B;AAC7B,yBAAyB;AACzB,gCAAgC;AAChC,uCAAuC;AACvC,oBAAoB;AACpB,YAAY;AACZ,SAAS;AACT,EAAE;AACF,kCAAkC;AAClC,aAAa;AACb,aAAa;AACb,0CAA0C;AAC1C,cAAc;AACd,SAAS;AACT,EAAE;AACF,0BAA0B;AAC1B,qBAAqB;AACrB,gBAAgB;AAChB,SAAS;AACT,KAAK;AAEL,IAAI,WAAW,GAAG,UAAC,SAAS;IAExB,IAAI,gBAAgB,GAAG,IAAI,WAAE,CAAC,SAAS,CACnC,0CAA0C,CAC7C,CAAC;IAEF,IAAI,IAAI,GAAG,IAAI,WAAC,CAAC,IAAI,CACjB,IAAI,WAAC,CAAC,OAAO,CACT,gBAAgB,EAChB,IAAI,mBAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EACvB,KAAK,CACR,CACJ,CAAC;IAEF,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CACtB,IAAI,CAAC,sBAAsB,EAAE,EAC7B,CAAC,EACD,IAAI,CAAC,sBAAsB,EAAE,GAAG,IAAI,CAAC,sBAAsB,EAAE,EAC7D,GAAG,CACN,CAAC;IAEF,QAAQ,CAAC,SAAS,CACd,SAAS,EACT,KAAK,CACR,CAAC;IAEF,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;AACjC,CAAC,CAAC;AAEF,IAAI,MAAM,GAAG,UAAC,SAAS;IACnB,QAAQ,CAAC,WAAW,CAChB,SAAS,CACZ,CAAC;IAEF,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA;AACpC,CAAC,CAAC;AAGF,IAAI,YAAY,GAAG;IAEf,IAAI,eAAe,GAAG,EAAE,CAAC;IAEzB,KAAsB,UAAiB,EAAjB,KAAA,UAAU,CAAC,IAAI,EAAE,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;QAApC,IAAI,SAAS,SAAA;QACd,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;KAClC;IAED,QAAQ,CAAC,YAAY,CACjB,eAAe,CAClB,CAAC;IAEF,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAEtC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;AAC/B,CAAC,CAAC;AAEF,IAAI,IAAI,GAAG;IAEP,+BAA+B;IAC/B,iBAAiB;IACjB,KAAK;IACL,EAAE;IACF,2CAA2C;IAC3C,iDAAiD;IACjD,KAAK;IACL,EAAE;IACF,oDAAoD;IACpD,EAAE;IACF,iCAAiC;IACjC,EAAE;IACF,gCAAgC;IAChC,EAAE;IACF,wCAAwC;AAC5C,CAAC,CAAC;AAEF,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,MAAM,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;IACjC,MAAM,CAAC,aAAa,CAAC,WAAW,GAAG,WAAW,CAAC;IAC/C,MAAM,CAAC,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;IACjD,MAAM,CAAC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;IACrC,MAAM,CAAC,aAAa,CAAC,UAAU,GAAG,UAAU,CAAC;IAC7C,MAAM,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;CAC9C","sourcesContent":["import {message as m, message} from \"../message/messenger\";\nimport Messenger = message.Messenger;\nimport {live, live as li} from \"../live/live\";\nimport {clip as c} from \"../clip/clip\";\nimport LiveApiJs = live.LiveApiJs;\nimport {log} from \"../log/logger\";\nimport Logger = log.Logger;\nimport {io} from \"../io/io\";\nimport Exporter = io.Exporter;\nimport {utils} from \"../utils/utils\";\n\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\ndeclare function post(message?: any): void;\ndeclare let Dict: any;\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'max';\n\nif (env === 'max') {\n    post('recompile successful');\n    autowatch = 1;\n}\n\nlet dir_projects = '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/tk_music_projects/';\n\nlet file_json_comm = dir_projects + 'json_live.json';\n\nlet exporter = new Exporter(\n    file_json_comm\n);\n\nlet part_names = new utils.Set([]);\n\nlet set_length = () => {\n    let clip_highlighted = new li.LiveApiJs(\n        'live_set view highlighted_clip_slot clip'\n    );\n\n    exporter.set_length(\n        clip_highlighted.get(\"length\")\n    );\n\n};\n\nlet set_tempo = () => {\n    let song = new li.LiveApiJs(\n        'live_set'\n    );\n\n    exporter.set_tempo(\n        song.get('tempo')\n    );\n};\n\n// let add = (name_part) => {\n//\n//     let song = new li.LiveApiJs(\n//         'live_set'\n//     );\n//\n//     let clip_highlighted = new li.LiveApiJs(\n//         'live_set view highlighted_clip_slot clip'\n//     );\n//\n//     let clip = new c.Clip(\n//         new c.ClipDao(\n//             clip_highlighted,\n//             new m.Messenger(env, 0),\n//             false\n//         )\n//     );\n//\n//     let notes = clip.get_notes(\n//         0,\n//         0,\n//         clip_highlighted.get(\"length\"),\n//         128\n//     );\n//\n//     exporter.set_notes(\n//         name_part,\n//         notes\n//     );\n// };\n\nlet export_part = (name_part) => {\n\n    let clip_highlighted = new li.LiveApiJs(\n        'live_set view highlighted_clip_slot clip'\n    );\n\n    let clip = new c.Clip(\n        new c.ClipDao(\n            clip_highlighted,\n            new m.Messenger(env, 0),\n            false\n        )\n    );\n\n    let notes = clip.get_notes(\n        clip.get_loop_bracket_lower(),\n        0,\n        clip.get_loop_bracket_upper() - clip.get_loop_bracket_lower(),\n        128\n    );\n\n    exporter.set_notes(\n        name_part,\n        notes\n    );\n\n    part_names.addItem(name_part)\n};\n\nlet remove = (name_part) => {\n    exporter.unset_notes(\n        name_part\n    );\n\n    part_names.removeItem(name_part)\n};\n\n\nlet export_clips = () => {\n\n    let clips_to_export = [];\n\n    for (let name_part of part_names.data()) {\n        clips_to_export.push(name_part)\n    }\n\n    exporter.export_clips(\n        clips_to_export\n    );\n\n    let messenger = new Messenger(env, 0);\n\n    messenger.message(['done'])\n};\n\nlet test = () => {\n\n    // let song = new li.LiveApiJs(\n    //     'live_set'\n    // );\n    //\n    // let clip_highlighted = new li.LiveApiJs(\n    //     'live_set view highlighted_clip_slot clip'\n    // );\n    //\n    // let length_clip = clip_highlighted.get(\"length\");\n    //\n    // let tempo = song.get(\"tempo\");\n    //\n    // let logger = new Logger(env);\n    //\n    // logger.log(clip_highlighted.get_id())\n};\n\nif (typeof Global !== \"undefined\") {\n    Global.clip_exporter = {};\n    Global.clip_exporter.test = test;\n    Global.clip_exporter.export_part = export_part;\n    Global.clip_exporter.export_clips = export_clips;\n    Global.clip_exporter.remove = remove;\n    Global.clip_exporter.set_length = set_length;\n    Global.clip_exporter.set_tempo = set_tempo;\n}\n"]}