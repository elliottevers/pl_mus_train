{"version":3,"file":"extract_beatmap.js","sourceRoot":"","sources":["extract_beatmap.ts"],"names":[],"mappings":";;AAAA,kDAA6C;AAC7C,IAAO,SAAS,GAAG,mBAAO,CAAC,SAAS,CAAC;AACrC,qCAAwC;AACxC,qCAAkC;AAClC,IAAO,IAAI,GAAG,WAAI,CAAC,IAAI,CAAC;AACxB,IAAO,OAAO,GAAG,WAAI,CAAC,OAAO,CAAC;AAa9B,IAAI,GAAG,GAAW,KAAK,CAAC;AAExB,IAAI,GAAG,KAAK,KAAK,EAAE;IACf,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC7B,SAAS,GAAG,CAAC,CAAC;CACjB;AAED,kEAAkE;AAClE,EAAE;AACF,8DAA8D;AAC9D,EAAE;AACF,sEAAsE;AACtE,EAAE;AACF,oDAAoD;AAEpD,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAEtC,IAAI,sBAAsB,GAAG;IAEzB,IAAI,iBAAiB,GAAG,IAAI,IAAI,CAC5B,IAAI,OAAO,CACP,IAAI,WAAE,CAAC,SAAS,CACZ,0CAA0C,CAC7C,EACD,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CACxB,CACJ,CAAC;IAEF,IAAI,iBAAiB,GAAG,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;IAE7D,IAAI,eAAe,GAAG,iBAAiB,CAAC,cAAc,EAAE,CAAC;IAEzD,IAAI,kBAAkB,GAAG,iBAAiB,CAAC,sBAAsB,EAAE,CAAC;IAEpE,IAAI,kBAAkB,GAAG,iBAAiB,CAAC,sBAAsB,EAAE,CAAC;IAEpE,IAAI,YAAY,GAAG,CAAC,iBAAiB,CAAC,cAAc,EAAE,GAAG,iBAAiB,CAAC,gBAAgB,EAAE,CAAC,CAAC;IAE/F,SAAS,CAAC,OAAO,CAAC,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAE5D,SAAS,CAAC,OAAO,CAAC,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC,CAAC;IAExD,SAAS,CAAC,OAAO,CAAC,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAE9D,SAAS,CAAC,OAAO,CAAC,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAE9D,SAAS,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC;IAElD,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEF,IAAI,IAAI,GAAG;AAEX,CAAC,CAAC;AAGF,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,MAAM,CAAC,eAAe,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;CAC1E","sourcesContent":["import {message} from \"../message/messenger\";\nimport Messenger = message.Messenger;\nimport {live as li} from \"../live/live\";\nimport {clip} from \"../clip/clip\";\nimport Clip = clip.Clip;\nimport ClipDao = clip.ClipDao;\n\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\ndeclare function post(message?: any): void;\ndeclare let Dict: any;\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'max';\n\nif (env === 'max') {\n    post('recompile successful');\n    autowatch = 1;\n}\n\n// let messenger_beat_start = new Messenger(env, 0, 'beat_start');\n//\n// let messenger_beat_end = new Messenger(env, 0, 'beat_end');\n//\n// let messenger_length_beats = new Messenger(env, 0, 'length-beats');\n//\n// let messenger_run = new Messenger(env, 0, 'run');\n\nlet messenger = new Messenger(env, 0);\n\nlet extract_beatmap_manual = () => {\n\n    let clip_audio_warped = new Clip(\n        new ClipDao(\n            new li.LiveApiJs(\n                'live_set view highlighted_clip_slot clip'\n            ),\n            new Messenger(env, 0)\n        )\n    );\n\n    let beat_start_marker = clip_audio_warped.get_start_marker();\n\n    let beat_end_marker = clip_audio_warped.get_end_marker();\n\n    let loop_bracket_lower = clip_audio_warped.get_loop_bracket_lower();\n\n    let loop_bracket_upper = clip_audio_warped.get_loop_bracket_upper();\n\n    let length_beats = (clip_audio_warped.get_end_marker() - clip_audio_warped.get_start_marker());\n\n    messenger.message(['beat_start_marker', beat_start_marker]);\n\n    messenger.message(['beat_end_marker', beat_end_marker]);\n\n    messenger.message(['loop_bracket_lower', loop_bracket_lower]);\n\n    messenger.message(['loop_bracket_upper', loop_bracket_upper]);\n\n    messenger.message(['length-beats', length_beats]);\n\n    messenger.message(['run']);\n};\n\nlet test = () => {\n\n};\n\n\nif (typeof Global !== \"undefined\") {\n    Global.extract_beatmap = {};\n    Global.extract_beatmap.extract_beatmap_manual = extract_beatmap_manual;\n}\n"]}