{"version":3,"file":"color_getter.js","sourceRoot":"","sources":["color_getter.ts"],"names":[],"mappings":";;AAAA,kDAA6C;AAC7C,IAAO,SAAS,GAAG,mBAAO,CAAC,SAAS,CAAC;AACrC,sCAAmC;AACnC,IAAO,UAAU,GAAG,SAAG,CAAC,UAAU,CAAC;AAYnC,IAAI,GAAG,GAAW,KAAK,CAAC;AAExB,IAAI,GAAG,KAAK,KAAK,EAAE;IACf,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC7B,SAAS,GAAG,CAAC,CAAC;CACjB;AAED,uCAAuC;AAEvC,4CAA4C;AAG5C,IAAI;AACJ,KAAK;AACL,KAAK;AACL,KAAK;AACL,KAAK;AACL,KAAK;AACL,MAAM;AACN,KAAK;AACL,KAAK;AACL,KAAK;AACL,KAAK;AACL,KAAK;AAEL,2DAA2D;AAC3D,IAAI,iBAAiB,GAAG;IACpB,UAAU,EAAE,OAAO;IACnB,YAAY,EAAE,OAAO;IACrB,YAAY,EAAE,MAAM;IACpB,SAAS,EAAE,GAAG;IACd,WAAW,EAAE,OAAO;IACpB,WAAW,EAAE,OAAO;IACpB,SAAS,EAAE,OAAO;IAClB,WAAW,EAAE,OAAO;IACpB,aAAa,EAAE,OAAO;IACtB,aAAa,EAAE,OAAO;IACtB,aAAa,EAAE,OAAO;IACtB,WAAW,EAAE,OAAO;CACvB,CAAC;AAEF,uFAAuF;AACvF,IAAI,eAAe,GAAG;IAClB,UAAU,EAAE,OAAO;IACnB,UAAU,EAAE,OAAO;IACnB,UAAU,EAAE,MAAM;IAClB,UAAU,EAAE,MAAM;IAClB,WAAW,EAAE,OAAO;IACpB,SAAS,EAAE,OAAO;CACrB,CAAC;AAEF,8BAA8B;AAC9B,IAAI,gBAAgB,GAAG;IACnB,aAAa,EAAE,OAAO;IACtB,OAAO,EAAE,CAAC;CACb,CAAC;AAEF,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,iCAAiC;AACjC,iCAAiC;AACjC,mCAAmC;AAEnC,IAAI,SAAS,GAAc,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAEjD,IAAI,WAAW,GAAe,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;AAExD,IAAI,IAAI,GAAG;IACP,WAAW;AACf,CAAC,CAAC;AAEF,+BAA+B;AAC/B,mCAAmC;AACnC,KAAK;AAEL,UAAU;AAEV,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC7B,MAAM,CAAC,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC;CACvC","sourcesContent":["import {message} from \"../message/messenger\";\nimport Messenger = message.Messenger;\nimport {map} from \"../control/map\";\nimport FretMapper = map.FretMapper;\n\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\ndeclare function post(message?: any): void;\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'max';\n\nif (env === 'max') {\n    post('recompile successful');\n    autowatch = 1;\n}\n\n// lookup Lemur color by feedback value\n\n// lookup Lemur color by RGB of render value\n\n\n// 0\n// +1\n// +2\n// +3\n// +4\n// +5\n// +-6\n// -5\n// -4\n// -3\n// -2\n// -1\n\n// needs feedback values as keys, and Lemur codes as values\nlet colormap_feedback = {\n    \"33,254,6\": 1080834,\n    \"32,254,254\": 1015422,\n    \"15,127,254\": 475006,\n    \"0,0,254\": 126,\n    \"128,0,254\": 4128894,\n    \"251,2,254\": 8192126,\n    \"251,1,6\": 8192002,\n    \"252,128,8\": 8208131,\n    \"253,204,101\": 8283442,\n    \"255,255,102\": 8355634,\n    \"204,255,102\": 6651698,\n    \"127,254,7\": 4161027\n};\n\n// needs RGB as keys, and Lemur codes as values, since that's what user will be picking\nlet colormap_render = {\n    \"128,0,63\": 4128799,\n    \"64,0,127\": 2031679,\n    \"7,63,128\": 204607,\n    \"16,127,1\": 474880,\n    \"127,127,3\": 4144897,\n    \"127,0,2\": 4128768\n};\n\n// RBG keys, Lemur code values\nlet colormap_default = {\n    \"255,255,255\": 8355711,\n    \"0,0,0\": 0\n};\n\n// let render_1 = [7733265, 65793];\n// let render_2 = [7733355, 65793];\n// let render_3 = [1900662, 65793];\n// let render_4 = [21361, 65793];\n// let render_5 = [28986, 65793];\n// let render_6 = [7372646, 65793];\n\nlet messenger: Messenger = new Messenger(env, 0);\n\nlet fret_mapper: FretMapper = new FretMapper(messenger);\n\nlet test = () => {\n    // midi(55)\n};\n\n// let midi = (pitch_midi) => {\n//     fret_mapper.play(pitch_midi)\n// };\n\n// test();\n\nif (typeof Global !== \"undefined\") {\n    Global.map_midi_to_fret = {};\n    Global.map_midi_to_fret.midi = midi;\n}\n"]}