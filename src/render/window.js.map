{"version":3,"file":"window.js","sourceRoot":"","sources":["window.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAQA,IAAI,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAE5C,IAAiB,MAAM,CAgEtB;AAhED,WAAiB,MAAM;IAMnB,IAAM,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,IAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAMxB;QACI,kBAAkB;QAClB,iBAAiB;QACjB,0BAA0B;QAC1B,mBAAmB;QACnB,6BAA6B;QAC7B,2CAA2C;QAC3C,oCAAoC;QACpC,kBAAkB;QAClB,wCAAwC;QAIxC,gBAAsB,MAAM;YACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC;QAGM,sBAAK,GAAZ,UAAa,SAAS;YAClB,IAAI,SAAS,GAAG,CAAC,OAAO,CAAC,CAAC;YAC1B,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC;QAEM,oBAAG,GAAV,UAAW,KAA+B;QAE1C,CAAC;QAWL,aAAC;IAAD,CAAC,AArCD,IAqCC;IAED;QAAgC,8BAAM;QAElC,oBAAY,MAAM;YAAlB,iBAGC;YAFG,iBACA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;;QACxB,CAAC;QAEL,iBAAC;IAAD,CAAC,AAPD,CAAgC,MAAM,GAOrC;IAPY,iBAAU,aAOtB,CAAA;IAED;QAAgC,8BAAM;QAAtC;;QAEA,CAAC;QAAD,iBAAC;IAAD,CAAC,AAFD,CAAgC,MAAM,GAErC;IAFY,iBAAU,aAEtB,CAAA;AACL,CAAC,EAhEgB,MAAM,GAAN,cAAM,KAAN,cAAM,QAgEtB","sourcesContent":["import TreeModel = require(\"tree-model\");\nimport {message as m} from \"../message/messenger\"\nimport {clip as c} from \"../clip/clip\";\nimport {note as n} from \"../note/note\";\nimport {live} from \"../live/live\";\nimport * as _ from \"lodash\";\nimport {log} from \"../log/logger\";\nimport {history} from \"../history/history\";\nlet CircularJSON = require('circular-json');\n\nexport namespace window {\n\n    import LiveClipVirtual = live.LiveClipVirtual;\n    import Logger = log.Logger;\n    import HistoryUserInput = history.HisstoryUserInput;\n\n    const red = [255, 0, 0];\n    const black = [0, 0, 0];\n\n    interface Renderable {\n        add(notes: TreeModel.Node<n.Note>[])\n    }\n\n    abstract class Window {\n        // height: number;\n        // width: number;\n        // messenger: m.Messenger;\n        // clips: c.Clip[];\n        // beats_per_measure: number;\n        // root_parse_tree: TreeModel.Node<n.Note>;\n        // leaves: TreeModel.Node<n.Note>[];\n        // logger: Logger;\n        // history_user_input: HistoryUserInput;\n\n\n\n        protected constructor(struct) {\n            this.struct = struct;\n        }\n\n\n        public clear(messenger) {\n            let msg_clear = [\"clear\"];\n            msg_clear.unshift('render');\n            this.messenger.message(msg_clear);\n        }\n\n        public add(notes: TreeModel.Node<n.Note>[]) {\n\n        }\n\n        // public insert(notes: TreeModel.Node<n.Note>[]) {\n        //     this.history_user_input.add(notes)\n        //\n        // }\n\n        // public render() {\n        //\n        // }\n\n    }\n\n    export class ListWindow extends Window implements Renderable {\n\n        constructor(struct) {\n            super\n            this.struct = struct\n        }\n\n    }\n\n    export class TreeWindow extends Window implements Renderable {\n\n    }\n}"]}