{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":"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","sourcesContent":["import {message} from \"../message/messenger\";\n\nexport namespace cli {\n    import Messenger = message.Messenger;\n\n    export class Executable {\n\n        path: string;\n        flags: Flag[];\n        options: Option[];\n        args: Arg[];\n        messenger: Messenger;\n\n        constructor(path, flags, options, args, messenger) {\n            this.path = path;\n            this.flags = flags;\n            this.options = options;\n            this.args = args;\n            this.messenger = messenger;\n        }\n\n        // TODO: put counting logic here\n        public b_primed(): boolean {\n            return this.get_unset_parameters().length > 0;\n        }\n\n        public get_unset_parameters(): string[] {\n            let unset_parameters: string[] = [];\n\n            // flags\n            for (let flag of this.flags) {\n                if (!flag.b_set()) {\n                    unset_parameters.push(flag.name)\n                }\n            }\n\n            // options\n            for (let option of this.options) {\n                if (!option.b_set()) {\n                    unset_parameters.push(option.name)\n                }\n            }\n\n            // args\n            for (let arg of this.args) {\n                if (!arg.b_set()) {\n                    unset_parameters.push(arg.name)\n                }\n            }\n\n            return unset_parameters;\n        }\n\n        public get_command_exec(): string {\n            return this.path;\n        }\n\n        public get_arg(name_arg) {\n            return this.args.filter((arg) => {\n                return arg.name === name_arg;\n            })[0];\n        }\n\n        public get_opt(name_opt) {\n            return this.options.filter((opt) => {\n                return opt.name === name_opt;\n            })[0];\n        }\n\n        public get_flag(name_flag) {\n            return this.flags.filter((flag) => {\n                return flag.name === name_flag;\n            })[0];\n        }\n\n        public get_run_command() {\n            let command_exec: string = this.get_command_exec();\n\n            let argv: string[] = [];\n\n            for (let flag of this.flags) {\n                if (flag.b_set()) {\n                    argv.push(flag.get_name_exec());\n                }\n            }\n\n            // options\n            for (let option of this.options) {\n                if (option.b_set()) {\n                    argv.push(option.get_name_exec());\n                }\n            }\n\n            // args\n            for (let arg of this.args) {\n                if (arg.b_set()) {\n                    argv.push(arg.get_name_exec());\n                }\n            }\n\n            return command_exec + ' ' + argv.join(' ');\n        }\n\n        public run() {\n            this.messenger.message(this.get_run_command().split(' '));\n        }\n    }\n\n    export class Arg {\n        name: string;\n        val: string;\n\n        constructor(name) {\n            this.name = name;\n        }\n\n        public set(val) {\n            this.val = val;\n        }\n\n        public get_name_exec() {\n            return this.val\n        }\n\n        public b_set(): boolean {\n            return this.val !== null\n        }\n    }\n\n    export class Flag {\n        name: string;\n        val: boolean;\n\n        constructor(name) {\n            this.name = name;\n        }\n\n        public set(val) {\n            this.val = val;\n        }\n\n        public get_name_exec() {\n            return '-' + this.name\n        }\n\n        public b_set(): boolean {\n            return this.val\n        }\n    }\n\n    export class Option {\n        name: string;\n        val: string;\n        needs_escaping: boolean;\n\n        constructor(name, needs_escaping: boolean) {\n            this.name = name;\n            this.needs_escaping = needs_escaping;\n        }\n\n        public set(val) {\n            this.val = val;\n        }\n\n        private _preprocess(val) {\n            if (this.needs_escaping) {\n\n            }\n        }\n\n        public get_name_exec() {\n            return '-' + this.name + ' ' + this._preprocess(this.val)\n        }\n\n        public b_set(): boolean {\n            return this.val !== null\n        }\n    }\n}"]}