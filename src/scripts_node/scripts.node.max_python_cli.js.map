{"version":3,"file":"scripts.node.max_python_cli.js","sourceRoot":"","sources":["scripts.node.max_python_cli.ts"],"names":[],"mappings":"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","sourcesContent":["import {cli} from \"../cli/cli\";\nconst _ = require('underscore');\nconst max_api = require('max-api');\nimport {PythonShell} from 'python-shell';\n\nlet args: cli.Arg[] = [];\nlet options: cli.Option[] = [];\nlet flags: cli.Flag[] = [];\n\nlet options_python_shell;\n\nlet arg = new cli.Arg('name_argument', false, false, true);\n\nlet option = new cli.Option('o', false, false, true);\n\nlet flag = new cli.Flag('f');\n\narg.set('name_argument');\n\noption.set('name_option');\n\nflag.set(1);\n\nlet path_interpreter = '/Users/elliottevers/DocumentsTurbulent/venvwrapper/master_36/bin/python';\n\nlet path_script = '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/music/sandbox/max_comm.py';\n\nmax_api.addHandler(\"set_arg\", (name_arg, val_arg) => {\n    if (_.contains(args.map((arg) => {return arg.name}), name_arg)) {\n        let arg_existing = args.filter(arg => arg.name === name_arg)[0];\n        arg_existing.set(val_arg);\n    } else {\n        let arg = new cli.Arg(name_arg);\n        arg.set(val_arg);\n        args.push(arg);\n    }\n});\n\nmax_api.addHandler(\"set_flag\", (name_flag, val_flag) => {\n    if (_.contains(flags.map((flag) => {return flag.name}), name_flag)) {\n        let flag_existing = flags.filter(flag => flag.name === name_flag)[0];\n        flag_existing.set(val_flag);\n    } else {\n        let flag = new cli.Flag(name_flag);\n        flag.set(val_flag);\n        flags.push(flag);\n    }\n});\n\nmax_api.addHandler(\"set_option\", (name_opt, val_opt) => {\n    if (_.contains(options.map((opt) => {return opt.name}), name_opt)) {\n        let opt_existing = options.filter(opt => opt.name === name_opt)[0];\n        opt_existing.set(val_opt);\n    } else {\n        let opt = new cli.Option(name_opt, false, false, true);\n        opt.set(val_opt);\n        options.push(opt);\n    }\n});\n\nmax_api.addHandler(\"set_path_interpreter\", (path) => {\n    path_interpreter = path\n});\n\nmax_api.addHandler(\"set_path_script\", (path) => {\n    path_script = path\n});\n\n\nlet run = () => {\n\n    let script = new cli.Script(\n        path_interpreter,\n        path_script,\n        [flag],\n        [option],\n        [arg]\n    );\n\n    let msg;\n\n    options_python_shell = {\n        mode: 'text',\n        pythonPath: path_interpreter,\n        args: ['argument', '-f', '--o', 'option_name']\n    };\n\n    PythonShell.run(script.script, options_python_shell, function (err, results) {\n        if (err) throw err;\n        // results is an array consisting of messages collected during execution\n        max_api.post(results);\n        // console.log(results)\n    });\n\n    // max_api.post(\n    //     script.get_command_full().join(' ')\n    // );\n\n};\n\nrun();\n\n// max_api.addHandler(\"run\", () => {\n//     run()\n// });\n\nmax_api.post('made it');\n"]}