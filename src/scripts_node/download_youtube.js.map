{"version":3,"file":"download_youtube.js","sourceRoot":"","sources":["download_youtube.ts"],"names":[],"mappings":";;AAAA,kCAA+B;AAC/B,6CAAyC;AACzC,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAEnC,IAAI,OAAO,GAAG,IAAI,SAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACjC,gEAAgE;AAChE,IAAI,eAAe,GAAG,IAAI,SAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxC,IAAI,aAAa,GAAG,IAAI,SAAG,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACnD,IAAI,sBAAsB,GAAG,IAAI,SAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAC/D,IAAI,mBAAmB,GAAG,IAAI,SAAG,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACzD,IAAI,sBAAsB,GAAG,IAAI,SAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAG/D,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAEzB,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAEvB,sBAAsB,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AAEpD,sBAAsB,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;AAExD,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,UAAC,GAAG;IAC9B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC;AAEH,8DAA8D;AAC9D,OAAO,CAAC,UAAU,CAAC,kBAAkB,EAAE,UAAC,IAAI;IACxC,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACzC,mBAAmB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;AACzC,CAAC,CAAC,CAAC;AACH,oCAAoC;AAEpC,IAAI,QAAQ,GAAG;IAEX,IAAI,oBAAoB,CAAC;IAEzB,IAAI,gBAAgB,GAAG,yEAAyE,CAAC;IAEjG,IAAI,kBAAkB,GAAG,sFAAsF,CAAC;IAEhH,IAAI,WAAW,GAAG,kBAAkB,GAAG,qBAAqB,CAAC;IAE7D,IAAI,MAAM,GAAG,IAAI,SAAG,CAAC,MAAM,CACvB,gBAAgB,EAChB,WAAW,EACX,CAAC,eAAe,CAAC,EACjB,CAAC,mBAAmB,EAAE,sBAAsB,EAAE,aAAa,EAAE,sBAAsB,CAAC,EACpF,CAAC,OAAO,CAAC,CACZ,CAAC;IAEF,oBAAoB,GAAG;QACnB,IAAI,EAAE,MAAM;QACZ,UAAU,EAAE,gBAAgB;QAC5B,IAAI,EAAE,MAAM,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;KAC/C,CAAC;IAEF,0BAAW,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,oBAAoB,EAAE,UAAU,GAAG,EAAE,OAAO;QACvE,IAAI,GAAG;YAAE,MAAM,GAAG,CAAC;QACnB,wEAAwE;QACxE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;QAC1C,wBAAwB;IAC5B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,OAAO,CAAC,UAAU,CAAC,UAAU,EAAE;IAC3B,QAAQ,EAAE,CAAA;AACd,CAAC,CAAC,CAAC;AAEH,aAAa","sourcesContent":["import {cli} from \"../cli/cli\";\nimport {PythonShell} from \"python-shell\";\nconst max_api = require('max-api');\n\nlet arg_url = new cli.Arg('url');\n// let option_outfile = new cli.Option('o', false, false, true);\nlet flag_audio_only = new cli.Flag('x');\nlet option_format = new cli.Option('audio-format');\nlet option_ffmpeg_location = new cli.Option('ffmpeg-location');\nlet option_name_project = new cli.Option('name-project');\nlet option_path_executable = new cli.Option('path-executable');\n\n\noption_format.set('wav');\n\nflag_audio_only.set(1);\n\noption_ffmpeg_location.set('/usr/local/bin/ffmpeg');\n\noption_path_executable.set('/usr/local/bin/youtube-dl');\n\nmax_api.addHandler('set_url', (url) => {\n    arg_url.set(url);\n});\n\n// arg_url.set('https://www.youtube.com/watch?v=j6TmogXhOZ8');\nmax_api.addHandler('set_project_name', (name) => {\n    let name_project = name.split('/').pop();\n    option_name_project.set(name_project)\n});\n// option_name_project.set('dream');\n\nlet download = () => {\n\n    let options_python_shell;\n\n    let path_interpreter = '/Users/elliottevers/DocumentsTurbulent/venvwrapper/master_36/bin/python';\n\n    let dir_scripts_python = '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync/music/src/scripts/';\n\n    let path_script = dir_scripts_python + 'download_youtube.py';\n\n    let script = new cli.Script(\n        path_interpreter,\n        path_script,\n        [flag_audio_only],\n        [option_name_project, option_path_executable, option_format, option_ffmpeg_location],\n        [arg_url]\n    );\n\n    options_python_shell = {\n        mode: 'text',\n        pythonPath: path_interpreter,\n        args: script.get_run_parameters().split(' ')\n    };\n\n    PythonShell.run(script.script, options_python_shell, function (err, results) {\n        if (err) throw err;\n        // results is an array consisting of messages collected during execution\n        max_api.outlet(results.toString().trim());\n        // console.log(results);\n    });\n};\n\nmax_api.addHandler(\"download\", () => {\n    download()\n});\n\n// download()\n"]}