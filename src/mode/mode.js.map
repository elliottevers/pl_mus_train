{"version":3,"file":"mode.js","sourceRoot":"","sources":["mode.ts"],"names":[],"mappings":";;AAAA,IAAiB,IAAI,CAuBpB;AAvBD,WAAiB,IAAI;IAEjB,IAAI,OAAO,GAAG,SAAS,CAAC;IAExB,IAAI,MAAM,GAAG,QAAQ,CAAC;IAEtB,wDAAwD;IACxD,kDAAkD;IAClD,qFAAqF;IACrF,yBAAyB;IACzB,qFAAqF;IACrF,wBAAwB;IACxB,oBAAoB;IACpB,QAAQ;IACR,EAAE;IACF,kCAAkC;IAClC,EAAE;IACF,kIAAkI;IAClI,EAAE;IACF,kEAAkE;IAClE,EAAE;IACF,kCAAkC;IAClC,KAAK;AACT,CAAC,EAvBgB,IAAI,GAAJ,YAAI,KAAJ,YAAI,QAuBpB","sourcesContent":["export namespace mode {\n\n    let HARMONY = 'harmony';\n\n    let MELODY = 'melody';\n\n    // export let transform_monophonic = (notes_target) => {\n    //     function compare(note_former,note_latter) {\n    //         if (note_former.model.note.beat_start < note_latter.model.note.beat_start)\n    //             return -1;\n    //         if (note_former.model.note.beat_start > note_latter.model.note.beat_start)\n    //             return 1;\n    //         return 0;\n    //     }\n    //\n    //     notes_target.sort(compare);\n    //\n    //     let length_beats = notes_target[notes_target.length - 1].model.note.get_beat_end() - notes_target[0].model.note.beat_start;\n    //\n    //     let duration_monophonic = length_beats/notes_target.length;\n    //\n    //     clip_user_input.set_notes()\n    // };\n}"]}