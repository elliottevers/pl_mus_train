{"version":3,"file":"clip_dao.js","sourceRoot":"","sources":["../../src/clip/clip_dao.ts"],"names":[],"mappings":"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","sourcesContent":["export namespace clip_dao {\n\n    export class ClipDao {\n\n        private clip_live;\n        private messenger;\n        private deferlow: boolean;\n\n        constructor(index_track: number, index_clip_slot: number, messenger, deferlow: boolean) {\n            let path = \"live_set tracks \" + index_track + \" clip_slots \" + index_clip_slot + \" clip\";\n            this.clip_live = new LiveAPI(null, path);\n            this.messenger = messenger;\n            this.deferlow = deferlow;\n        }\n\n        get_end_marker(): number {\n            return this.clip_live.get('end_marker');\n        }\n\n        set_loop_bracket_lower(beat: number) {\n            if (this.deferlow) {\n                this.messenger.message([\"clip_endpoints\", \"loop_start\", beat, \"set\"])\n            } else {\n                this.clip_live.set('loop_start', beat);\n            }\n        }\n\n        set_loop_bracket_upper(beat: number) {\n            if (this.deferlow) {\n                this.messenger.message([\"clip_endpoints\", \"loop_end\", beat, \"set\"])\n            } else {\n                this.clip_live.set('loop_end', beat);\n            }\n        }\n\n        set_clip_endpoint_lower(beat: number) {\n            if (this.deferlow) {\n                this.messenger.message([\"clip_endpoints\", \"start_marker\", beat, \"set\"])\n            } else {\n                this.clip_live.set('start_marker', beat);\n            }\n        }\n\n        set_clip_endpoint_upper(beat: number) {\n            if (this.deferlow) {\n                this.messenger.message([\"clip_endpoints\", \"end_marker\", beat, \"set\"])\n            } else {\n                this.clip_live.set('end_marker', beat);\n            }\n        }\n\n        fire(): void {\n            if (this.deferlow) {\n                this.messenger.message([\"clip_endpoints\", \"fire\", \"call\"])\n            } else {\n                this.clip_live.call('fire');\n            }\n        };\n\n        stop(): void {\n            if (this.deferlow) {\n                this.messenger.message([\"clip_endpoints\", \"stop\", \"call\"])\n            } else {\n                this.clip_live.call('stop');\n            }\n        };\n\n        get_notes(beat_start, pitch_midi_min, beat_end, pitch_midi_max): string[] {\n            return this.clip_live.call(\n                'get_notes',\n                beat_start,\n                pitch_midi_min,\n                beat_end,\n                pitch_midi_max\n            );\n        };\n\n    }\n}"]}