{"version":3,"file":"extract_beatmap.js","sourceRoot":"","sources":["../../src/scripts/extract_beatmap.ts"],"names":[],"mappings":";;AAAA,kDAA2D;AAC3D,IAAO,SAAS,GAAG,mBAAO,CAAC,SAAS,CAAC;AAoBrC,IAAI,GAAG,GAAW,KAAK,CAAC;AAExB,IAAI,GAAG,KAAK,KAAK,EAAE;IACf,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC7B,SAAS,GAAG,CAAC,CAAC;CACjB;AAED,IAAI,oBAAoB,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;AAE/D,IAAI,kBAAkB,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;AAE3D,IAAI,aAAa,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAEjD,IAAI,sBAAsB,GAAG;IAEzB,0BAA0B;IAC1B,EAAE;IACF,+DAA+D;IAC/D,EAAE;IACF,6DAA6D;IAC7D,EAAE;IACF,qEAAqE;IACrE,EAAE;IACF,4CAA4C;IAC5C,EAAE;IACF,wCAAwC;IACxC,EAAE;IACF,mCAAmC;AACvC,CAAC,CAAC;AAEF,IAAI,IAAI,GAAG;IAEP,+BAA+B;IAC/B,iBAAiB;IACjB,KAAK;IACL,EAAE;IACF,2CAA2C;IAC3C,iDAAiD;IACjD,KAAK;IACL,EAAE;IACF,oDAAoD;IACpD,EAAE;IACF,iCAAiC;IACjC,EAAE;IACF,gCAAgC;IAChC,EAAE;IACF,wCAAwC;AAC5C,CAAC,CAAC;AAGF,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,MAAM,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;IAChC,iCAAiC;IACjC,uCAAuC;IACvC,mDAAmD;IACnD,+CAA+C;IAC/C,6CAA6C;CAChD","sourcesContent":["import {message as m, message} from \"../message/messenger\";\nimport Messenger = message.Messenger;\nimport {live, live as li} from \"../live/live\";\nimport {clip as c} from \"../clip/clip\";\nimport LiveApiJs = live.LiveApiJs;\nimport {log} from \"../log/logger\";\nimport Logger = log.Logger;\nimport {io} from \"../io/io\";\nimport Exporter = io.Exporter;\n\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\ndeclare function post(message?: any): void;\ndeclare let Dict: any;\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'max';\n\nif (env === 'max') {\n    post('recompile successful');\n    autowatch = 1;\n}\n\nlet messenger_beat_start = new Messenger(env, 0, 'beat_start');\n\nlet messenger_beat_end = new Messenger(env, 0, 'beat_end');\n\nlet messenger_run = new Messenger(env, 0, 'run');\n\nlet extract_beatmap_manual = () => {\n\n    // // get highlighted clip\n    //\n    // let beat_start = clip_audio_warped.get_loop_bracket_lower();\n    //\n    // let beat_end = clip_audio_warped.get_loop_bracket_upper();\n    //\n    // // let messenger_beat_start = new Messenger(env, 0, 'beat_start');\n    //\n    // messenger_beat_start.message(beat_start);\n    //\n    // messenger_beat_end.message(beat_end);\n    //\n    // messenger_run.message(['bang']);\n};\n\nlet test = () => {\n\n    // let song = new li.LiveApiJs(\n    //     'live_set'\n    // );\n    //\n    // let clip_highlighted = new li.LiveApiJs(\n    //     'live_set view highlighted_clip_slot clip'\n    // );\n    //\n    // let length_clip = clip_highlighted.get(\"length\");\n    //\n    // let tempo = song.get(\"tempo\");\n    //\n    // let logger = new Logger(env);\n    //\n    // logger.log(clip_highlighted.get_id())\n};\n\n\nif (typeof Global !== \"undefined\") {\n    Global.export_clips = {};\n    Global.export_clips.test = test;\n    // Global.export_clips.add = add;\n    // Global.export_clips.remove = remove;\n    // Global.export_clips.export_clips = export_clips;\n    // Global.export_clips.set_length = set_length;\n    // Global.export_clips.set_tempo = set_tempo;\n}\n"]}