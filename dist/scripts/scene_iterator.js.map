{"version":3,"file":"scene_iterator.js","sourceRoot":"","sources":["../../src/scripts/scene_iterator.ts"],"names":[],"mappings":";;AAAA,kDAA6C;AAC7C,IAAO,SAAS,GAAG,mBAAO,CAAC,SAAS,CAAC;AACrC,qCAAwC;AAIxC,qCAAiD;AACjD,IAAO,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;AAC/B,IAAO,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AACrC,8CAA8C;AAC9C,IAAM,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAahC,IAAI,GAAG,GAAW,KAAK,CAAC;AAExB,IAAI,GAAG,KAAK,KAAK,EAAE;IACf,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC7B,SAAS,GAAG,CAAC,CAAC;CACjB;AAED,IAAI,CAAC,CAAC;AAEN,CAAC,GAAG,CAAC,CAAC;AAEN,IAAI,iBAAiB,GAAG,IAAI,CAAC;AAE7B,qBAAqB;AACrB,sDAAsD;AACtD,KAAK;AAEL,IAAI,MAAM,GAAG,EAAE,CAAC;AAEhB,aAAa;AAEb,KAAc,UAAa,EAAb,KAAA,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAb,cAAa,EAAb,IAAa,EAAE;IAAxB,IAAI,GAAC,SAAA;IACN,IAAI,UAAU,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7D,+CAA+C;IAC/C,IAAI,KAAK,GAAG,IAAI,WAAE,CAAC,SAAS,CACxB,UAAU,CACb,CAAC;IACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAClB,yDAAyD;CAC5D;AAGD,IAAI,IAAI,GAAG,IAAI,IAAI,CACf,IAAI,OAAO,CACP,IAAI,WAAE,CAAC,SAAS,CACZ,UAAU,CACb,EACD,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EACrB,KAAK,CACR,CACJ,CAAC;AAIF,IAAI,IAAI,GAAG;IACP,IAAI,eAAe,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEnD,CAAC,IAAI,eAAe,CAAC;IAErB,IAAI,CAAC,GAAG,CAAC,EAAE;QACP,MAAM,oBAAoB,CAAA;KAC7B;IAED,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE;QACnB,WAAW;QACX,oCAAoC;QACpC,kBAAkB;QAClB,IAAI;QACJ,IAAI,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAA;KACvC;SAAM;QACH,WAAW;QACX,mBAAmB;QACnB,iBAAiB;QACjB,IAAI;QACJ,IAAI,CAAC,IAAI,EAAE,CAAA;KACd;AACL,CAAC,CAAC;AAEF,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;CACrC;AAGD,iCAAiC;AACjC,mCAAmC;AACnC,yCAAyC;AACzC,yBAAyB;AACzB,EAAE;AACF,qEAAqE;AACrE,oCAAoC;AACpC,sDAAsD;AACtD,uBAAuB;AACvB,QAAQ;AACR,EAAE;AACF,iCAAiC;AACjC,sBAAsB;AACtB,mEAAmE;AACnE,EAAE;AACF,qCAAqC;AACrC,EAAE;AACF,4BAA4B;AAC5B,2CAA2C;AAC3C,YAAY;AACZ,EAAE;AACF,+CAA+C;AAC/C,uBAAuB;AACvB,gDAAgD;AAChD,8BAA8B;AAC9B,gBAAgB;AAChB,mBAAmB;AACnB,uBAAuB;AACvB,+BAA+B;AAC/B,6BAA6B;AAC7B,gBAAgB;AAChB,YAAY;AACZ,QAAQ;AACR,EAAE;AACF,yBAAyB;AACzB,6BAA6B;AAC7B,4CAA4C;AAC5C,mBAAmB;AACnB,2BAA2B;AAC3B,YAAY;AACZ,QAAQ;AACR,EAAE;AACF,uBAAuB;AACvB,uBAAuB;AACvB,QAAQ;AACR,EAAE;AACF,mCAAmC;AACnC,yBAAyB;AACzB,QAAQ;AACR,IAAI","sourcesContent":["import {message} from \"../message/messenger\";\nimport Messenger = message.Messenger;\nimport {live as li} from \"../live/live\";\nimport {log} from \"../log/logger\";\nimport Logger = log.Logger;\nimport {utils} from \"../utils/utils\";\nimport {song as module_song} from \"../song/song\";\nimport Song = module_song.Song;\nimport SongDao = module_song.SongDao;\n// import {Segment} from \"../segment/segment\";\nconst _ = require('underscore');\n\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\ndeclare function post(message?: any): void;\ndeclare let Dict: any;\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'max';\n\nif (env === 'max') {\n    post('recompile successful');\n    autowatch = 1;\n}\n\nlet i;\n\ni = 0;\n\nlet direction_forward = true;\n\n// let test = () => {\n//     let path_scene = \"live_set view selected_scene\"\n// };\n\nlet scenes = [];\n\n// initialize\n\nfor (let i of _.range(0, 5)) {\n    let path_scene = ['live_set', 'scenes', Number(i)].join(' ');\n    // let path_live = constituents_path.join(' ');\n    let scene = new li.LiveApiJs(\n        path_scene\n    );\n    scenes.push(scene)\n    // scenes.call('create_clip', String(beats_length_clip));\n}\n\n\nlet song = new Song(\n    new SongDao(\n        new li.LiveApiJs(\n            'live_set'\n        ),\n        new Messenger(env, 0),\n        false\n    )\n);\n\n\n\nlet next = () => {\n    let value_increment = (direction_forward) ? 1 : -1;\n\n    i += value_increment;\n\n    if (i < 0) {\n        throw 'scene iterator < 0'\n    }\n\n    if (i < scenes.length) {\n        // return {\n        //     value: this.segments[this.i],\n        //     done: false\n        // }\n        let force_legato = String(1);\n        scenes[i].call('fire', force_legato)\n    } else {\n        // return {\n        //     value: null,\n        //     done: true\n        // }\n        song.stop()\n    }\n};\n\nif (typeof Global !== \"undefined\") {\n    Global.scene_iterator = {};\n    Global.scene_iterator.next = next;\n}\n\n\n// export class SegmentIterator {\n//     private segments: Segment[];\n//     public direction_forward: boolean;\n//     private i: number;\n//\n//     constructor(segments: Segment[], direction_forward: boolean) {\n//         this.segments = segments;\n//         this.direction_forward = direction_forward;\n//         this.i = -1;\n//     }\n//\n//     // TODO: type declarations\n//     public next() {\n//         let value_increment = (this.direction_forward) ? 1 : -1;\n//\n//         this.i += value_increment;\n//\n//         if (this.i < 0) {\n//             throw 'segment iterator < 0'\n//         }\n//\n//         if (this.i < this.segments.length) {\n//             return {\n//                 value: this.segments[this.i],\n//                 done: false\n//             }\n//         } else {\n//             return {\n//                 value: null,\n//                 done: true\n//             }\n//         }\n//     }\n//\n//     public current() {\n//         if (this.i > -1) {\n//             return this.segments[this.i];\n//         } else {\n//             return null;\n//         }\n//     }\n//\n//     public reset() {\n//         this.i = -1;\n//     }\n//\n//     public get_index_current() {\n//         return this.i;\n//     }\n// }\n"]}