{"version":3,"file":"track_test.js","sourceRoot":"","sources":["../../src/scripts/track_test.ts"],"names":[],"mappings":";;AAAA,wCAAkC;AAClC,IAAO,MAAM,GAAG,YAAG,CAAC,MAAM,CAAC;AAU3B,IAAM,KAAK,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAMzC,IAAI,GAAG,GAAW,KAAK,CAAC;AAExB,IAAI,GAAG,KAAK,KAAK,EAAE;IACf,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC7B,SAAS,GAAG,CAAC,CAAC;CACjB;AAGD,IAAI,IAAI,GAAG;IACP,yBAAyB;IACzB,oBAAoB;IACpB,yBAAyB;IACzB,kCAAkC;IAClC,YAAY;IACZ,QAAQ;IACR,KAAK;IACL,EAAE;IACF,gCAAgC;IAChC,EAAE;IACF,0CAA0C;IAE1C,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;IAE7B,IAAI,KAAK,CAAC,SAAS,EAAE;QACjB,wBAAwB;QACxB,MAAM,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAA;KAClC;IAED,IAAI,KAAK,CAAC,MAAM,EAAE;QACd,wBAAwB;QACxB,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;KAC7B;AACL,CAAC,CAAC;AAEF,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,MAAM,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;CACjC","sourcesContent":["import {log} from \"../log/logger\";\nimport Logger = log.Logger;\n\n\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\ndeclare function post(message?: any): void;\ndeclare let Dict: any;\n\nconst jsEnv = require('browser-or-node');\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'max';\n\nif (env === 'max') {\n    post('recompile successful');\n    autowatch = 1;\n}\n\n\nlet test = () => {\n    // let track = new Track(\n    //     new TrackDao(\n    //         new LiveApiJs(\n    //             'live_set tracks 2'\n    //         )\n    //     )\n    // );\n    //\n    // let logger = new Logger(env);\n    //\n    // logger.log(track.get_num_clip_slots());\n\n    let logger = new Logger(env);\n\n    if (jsEnv.isBrowser) {\n        // do browser only stuff\n        logger.log('this is a browser')\n    }\n\n    if (jsEnv.isNode) {\n        // do node.js only stuff\n        logger.log('this is node')\n    }\n};\n\nif (typeof Global !== \"undefined\") {\n    Global.track_test = {};\n    Global.track_test.test = test;\n}\n"]}