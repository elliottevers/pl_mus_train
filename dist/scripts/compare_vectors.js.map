{"version":3,"file":"compare_vectors.js","sourceRoot":"","sources":["../../src/scripts/compare_vectors.ts"],"names":[],"mappings":";;AAAA,kDAA6C;AAC7C,IAAO,SAAS,GAAG,mBAAO,CAAC,SAAS,CAAC;AACrC,wCAAkC;AAClC,IAAO,MAAM,GAAG,YAAG,CAAC,MAAM,CAAC;AAC3B,IAAM,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAYhC,IAAI,GAAG,GAAW,KAAK,CAAC;AAExB,IAAI,GAAG,KAAK,KAAK,EAAE;IACf,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC7B,SAAS,GAAG,CAAC,CAAC;CACjB;AAED,IAAI,SAAS,GAAc,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAEjD,IAAI,MAAM,GAAW,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;AAErC,IAAI,YAAY,GAAG,EAAE,CAAC;AAEtB,oBAAoB;AACpB,IAAI,gBAAgB,GAAG,UAAC,MAAM,EAAE,MAAM,EAAE,CAAC;IACrC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9B,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9B,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC;AAEF,IAAI,SAAS,GAAG,UAAC,MAAM,EAAE,MAAM;IAC3B,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC;AAEF,IAAI,iBAAiB,GAAG,UAAC,MAAM;IAC3B,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;QAClB,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;YACzB,OAAO,MAAM,CAAC,CAAC,CAAC,CAAA;SACnB;KACJ;IACD,OAAO,CAAC,CAAC;AACb,CAAC,CAAC;AAEF,SAAS,gBAAgB;IACrB,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzD,CAAC;AAED,SAAS,mBAAmB;IACxB,IAAI,wBAAwB,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,SAAS,CAAC,OAAO,CACb;QACI,qBAAqB;QACrB,gBAAgB,CACZ,YAAY,EACZ,wBAAwB,EACxB,iBAAiB,CAAC,YAAY,CAAC,CAClC;KACJ,CACJ,CAAA;AACL,CAAC;AAED,SAAS,qBAAqB;IAC1B,IAAI,wBAAwB,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,SAAS,CAAC,OAAO,CACb;QACI,uBAAuB;QACvB,SAAS,CACL,YAAY,EACZ,wBAAwB,CAC3B;KACJ,CACJ,CAAA;AACL,CAAC;AAED,qBAAqB;AACrB,EAAE;AACF,qDAAqD;AACrD,SAAS;AACT,wDAAwD;AACxD,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,qDAAqD;AACrD,EAAE;AACF,oBAAoB;AACpB,iDAAiD;AACjD,EAAE;AACF,oBAAoB;AACpB,iDAAiD;AACjD,EAAE;AACF,oDAAoD;AACpD,EAAE;AACF,+CAA+C;AAC/C,EAAE;AACF,oBAAoB;AACpB,2CAA2C;AAC3C,EAAE;AACF,oBAAoB;AACpB,mDAAmD;AACnD,KAAK;AACL,EAAE;AACF,UAAU;AAEV,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,MAAM,CAAC,eAAe,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IAC3D,MAAM,CAAC,eAAe,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;IACjE,MAAM,CAAC,eAAe,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;CACxE","sourcesContent":["import {message} from \"../message/messenger\";\nimport Messenger = message.Messenger;\nimport {log} from \"../log/logger\";\nimport Logger = log.Logger;\nconst _ = require(\"underscore\");\n\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\ndeclare function post(message?: any): void;\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'max';\n\nif (env === 'max') {\n    post('recompile successful');\n    autowatch = 1;\n}\n\nlet messenger: Messenger = new Messenger(env, 0);\n\nlet logger: Logger = new Logger(env);\n\nlet vector_radio = [];\n\n// render dependency\nlet overlap_at_index = (former, latter, i) => {\n    logger.log(former.toString());\n    logger.log(latter.toString());\n    return former[i] === latter[i] ? 1 : 0;\n};\n\nlet are_equal = (former, latter) => {\n    return _.isEqual(former, latter) ? 1 : 0;\n};\n\nlet get_index_nonzero = (vector) => {\n    for (let i in vector) {\n        if (vector[Number(i)] === 1) {\n            return Number(i)\n        }\n    }\n    return 0;\n};\n\nfunction set_vector_radio() {\n    vector_radio = Array.prototype.slice.call(arguments);\n}\n\nfunction b_stream_dependency() {\n    let dependencies_broadcasted = Array.prototype.slice.call(arguments);\n    messenger.message(\n        [\n            'b_stream_dependency',\n            overlap_at_index(\n                vector_radio,\n                dependencies_broadcasted,\n                get_index_nonzero(vector_radio)\n            )\n        ]\n    )\n}\n\nfunction b_stream_ground_truth() {\n    let ground_truth_broadcasted = Array.prototype.slice.call(arguments);\n    messenger.message(\n        [\n            'b_stream_ground_truth',\n            are_equal(\n                vector_radio,\n                ground_truth_broadcasted\n            )\n        ]\n    )\n}\n\n// let test = () => {\n//\n//     // let vector_checkbox_test = [1, 1, 0, 0, 0];\n//     //\n//     // let vector_radio_key_center = [1, 0, 0, 0, 0];\n//\n//     let vector_checkbox_test = [0, 1, 0, 0, 0];\n//\n//     let vector_radio_key_center = [1, 0, 0, 0, 0];\n//\n//     // @ts-ignore\n//     set_vector_radio(vector_radio_key_center);\n//\n//     // @ts-ignore\n//     b_stream_dependency(vector_checkbox_test);\n//\n//     let vector_checkbox_test_2 = [1, 0, 0, 0, 0];\n//\n//     let vector_radio_bass = [0, 1, 0, 0, 0];\n//\n//     // @ts-ignore\n//     set_vector_radio(vector_radio_bass);\n//\n//     // @ts-ignore\n//     b_stream_dependency(vector_checkbox_test_2);\n// };\n//\n// test();\n\nif (typeof Global !== \"undefined\") {\n    Global.compare_vectors = {};\n    Global.compare_vectors.set_vector_radio = set_vector_radio;\n    Global.compare_vectors.b_stream_dependency = b_stream_dependency;\n    Global.compare_vectors.b_stream_ground_truth = b_stream_ground_truth;\n}\n"]}