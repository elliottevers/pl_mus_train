{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":";;AAAA,qCAAqC;AACrC,IAAI,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC;AAC/B,IAAI,SAAS,GAAQ,EAAE,CAAC;AAExB,uCAAiC;AAEjC,MAAM,GAAG,CAAC,CAAC;AACX,OAAO,GAAG,CAAC,CAAC;AACZ,SAAS,GAAG,CAAC,CAAC;AAEd,kBAAkB;AAClB,mBAAmB;AACnB,qBAAqB;AAErB,mBAAmB;AAEnB,mFAAmF;AACnF,kBAAkB;AAElB,mCAAmC;AACnC,yBAAyB;AAEzB,uCAAuC;AACvC,wCAAwC;AACxC,4BAA4B;AAC5B,8BAA8B;AAG9B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAE5B,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI;IAC1B,uCAAuC;IACvC,gEAAgE;IAChE,4DAA4D;IAC5D,EAAE;IACF,mEAAmE;IACnE,0BAA0B;IAC1B,sCAAsC;IACtC,EAAE;IACF,gEAAgE;IAEhE,2DAA2D;IAC3D,IAAI,MAAM,GAAG,IAAI,YAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACpC,qBAAqB;IACrB,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;IAExB,uBAAuB;IACvB,2BAA2B;AAC/B,CAAC,CAAC","sourcesContent":["// Globals defined in Max environment\nlet inlets, outlets, autowatch;\nlet ExportMax: any = {};\n\nimport {Log} from \"./log/logger\";\n\ninlets = 1;\noutlets = 1;\nautowatch = 1;\n\n// let inlets = 1;\n// let outlets = 1;\n// let autowatch = 1;\n\n// var Global = {};\n\n// Only works if ExampleModule.ts is declared before ExampleJS.ts in tsconfig.json!\n// let a = Animal;\n\n// import { Animal } from \"animal\";\n// import Animal = Animal\n\n// let logger = new Log.Logger('node');\n// let dog = new Animal.Canine('doggo');\n// console.log(cat.speak());\n// console.log('hello world');\n\n\nconsole.log('hello world!');\n\nExportMax.main = function main() {\n    // let theObject = new em.TheClass(42);\n    // post(\"theObject.getIndex(): \" + theObject.getIndex() + \"\\n\");\n    // post(\"The square of pi is \" + em.square(Math.PI) + \"\\n\");\n    //\n    // // Cast to <any> to assign properties to objects of type Global.\n    // var g = new Global(\"\");\n    // (<any>g).newProperty = \"I am new.\";\n    //\n    // post(\"(<any>g).newProperty: \" + (<any>g).newProperty + \"\\n\");\n\n    // TODO: make new type for the logger initialization string\n    let logger = new Log.Logger('node');\n    // post(cat.speak());\n    logger.log(\"I am Logge\")\n\n    // post('hello world');\n    // console.log(cat.speak())\n};\n\n"]}