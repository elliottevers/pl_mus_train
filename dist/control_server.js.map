{"version":3,"file":"control_server.js","sourceRoot":"","sources":["../src/control_server.ts"],"names":[],"mappings":";;AAAA,6CAA0C;AAC1C,IAAO,SAAS,GAAG,iBAAO,CAAC,SAAS,CAAC;AACrC,iDAA4C;AAC5C,IAAO,SAAS,GAAG,mBAAO,CAAC,SAAS,CAAC;AAYrC,IAAI,GAAG,GAAW,KAAK,CAAC;AAExB,IAAI,GAAG,KAAK,KAAK,EAAE;IACf,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC7B,SAAS,GAAG,CAAC,CAAC;CACjB;AAED,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAEtC,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;AAEhD,IAAI,IAAI,GAAG,UAAC,eAAe,EAAE,aAAa;IACtC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC;AAEF,IAAI,KAAK,GAAG,UAAC,eAAe;IACxB,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AACrC,CAAC,CAAC;AAEF,IAAI,MAAM,GAAG,UAAC,eAAe;IACzB,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,IAAI,IAAI,GAAG;IACP,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACX,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACX,KAAK,CAAC,CAAC,CAAC,CAAC;IACT,MAAM,CAAC,CAAC,CAAC,CAAC;IACV,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACX,KAAK,CAAC,CAAC,CAAC,CAAC;IACT,MAAM,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;AAEF,UAAU;AAEV,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;IAClC,MAAM,CAAC,cAAc,CAAC,KAAK,GAAG,KAAK,CAAC;IACpC,MAAM,CAAC,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC;IACtC,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;CACrC","sourcesContent":["import {control} from \"./control/control\";\nimport Fretboard = control.Fretboard;\nimport {message} from \"./message/messenger\";\nimport Messenger = message.Messenger;\n\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\ndeclare function post(message?: any): void;\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'max';\n\nif (env === 'max') {\n    post('recompile successful');\n    autowatch = 1;\n}\n\nlet messenger = new Messenger(env, 0);\n\nlet fretboard = new Fretboard(6, 12, messenger);\n\nlet fret = (position_string, position_fret) => {\n    fretboard.fret(Number(position_string), Number(position_fret));\n};\n\nlet pluck = (position_string) => {\n    fretboard.pluck(position_string);\n};\n\nlet dampen = (position_string) => {\n    fretboard.dampen(position_string);\n};\n\nlet test = () => {\n    fret(1, 1);\n    fret(1, 3);\n    pluck(1);\n    dampen(1);\n    fret(1, 0);\n    pluck(1);\n    dampen(1);\n};\n\n// test();\n\nif (typeof Global !== \"undefined\") {\n    Global.control_server = {};\n    Global.control_server.fret = fret;\n    Global.control_server.pluck = pluck;\n    Global.control_server.dampen = dampen;\n    Global.control_server.test = test;\n}\n"]}