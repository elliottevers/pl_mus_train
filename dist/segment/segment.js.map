{"version":3,"file":"segment.js","sourceRoot":"","sources":["../../src/segment/segment.ts"],"names":[],"mappings":";;AAEA,8BAA8B;AAC9B,IAAiB,OAAO,CAwEvB;AAxED,WAAiB,OAAO;IAIpB;QAMI,iBAAY,UAAkB,EAAE,QAAgB,EAAE,IAAU;YACxD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC;QAEM,oCAAkB,GAAzB;YACI,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAClD,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC;QAEM,gCAAc,GAArB;YACI,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAA;QACvC,CAAC;QAEM,gCAAc,GAArB;YACI,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAA;QACrC,CAAC;QACL,cAAC;IAAD,CAAC,AAxBD,IAwBC;IAxBY,eAAO,UAwBnB,CAAA;IAED;QAKI,yBAAY,QAAmB,EAAE,iBAA0B;YACvD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;YAC3C,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAChB,CAAC;QAED,0BAA0B;QACnB,8BAAI,GAAX;YACI,IAAI,eAAe,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAExD,IAAI,CAAC,CAAC,IAAI,eAAe,CAAC;YAE1B,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;gBACZ,MAAM,mBAAmB,CAAA;aAC5B;YAED,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAC/B,OAAO;oBACH,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC5B,IAAI,EAAE,KAAK;iBACd,CAAA;aACJ;iBAAM;gBACH,OAAO;oBACH,KAAK,EAAE,IAAI;oBACX,IAAI,EAAE,IAAI;iBACb,CAAA;aACJ;QACL,CAAC;QAEM,iCAAO,GAAd;YACI,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;gBACb,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAChC;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;QACL,CAAC;QACL,sBAAC;IAAD,CAAC,AAzCD,IAyCC;IAzCY,uBAAe,kBAyC3B,CAAA;AACL,CAAC,EAxEgB,OAAO,GAAP,eAAO,KAAP,eAAO,QAwEvB","sourcesContent":["import {clip} from \"../clip/clip\";\n\n// TODO: use namespaces better\nexport namespace segment {\n\n    import Clip = clip.Clip;\n\n    export class Segment {\n\n        beat_start: number;\n        beat_end: number;\n        clip: Clip;\n\n        constructor(beat_start: number, beat_end: number, clip: Clip) {\n            this.beat_start = beat_start;\n            this.beat_end = beat_end;\n            this.clip = clip;\n        }\n\n        public set_endpoints_loop() {\n            this.clip.set_loop_bracket_lower(this.beat_start);\n            this.clip.set_clip_endpoint_upper(this.beat_end);\n        }\n\n        public get_beat_lower() {\n            return this.clip.get_start_marker()\n        }\n\n        public get_beat_upper() {\n            return this.clip.get_end_marker()\n        }\n    }\n\n    export class SegmentIterator {\n        private segments: Segment[];\n        public direction_forward: boolean;\n        private i: number;\n\n        constructor(segments: Segment[], direction_forward: boolean) {\n            this.segments = segments;\n            this.direction_forward = direction_forward;\n            this.i = -1;\n        }\n\n        // TODO: type declarations\n        public next() {\n            let value_increment = (this.direction_forward) ? 1 : -1;\n\n            this.i += value_increment;\n\n            if (this.i < 0) {\n                throw 'note iterator < 0'\n            }\n\n            if (this.i < this.segments.length) {\n                return {\n                    value: this.segments[this.i],\n                    done: false\n                }\n            } else {\n                return {\n                    value: null,\n                    done: true\n                }\n            }\n        }\n\n        public current() {\n            if (this.i > -1) {\n                return this.segments[this.i];\n            } else {\n                return null;\n            }\n        }\n    }\n}"]}