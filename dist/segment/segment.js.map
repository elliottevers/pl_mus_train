{"version":3,"file":"segment.js","sourceRoot":"","sources":["../../src/segment/segment.ts"],"names":[],"mappings":"AAAA,qCAAqC;AACrC,gDAAgD;AAChD,4CAA4C;AAC5C,qCAAqC;AACrC,wCAAwC;AACxC,EAAE;AACF,6BAA6B;AAC7B,EAAE;AACF,+BAA+B;AAC/B,+BAA+B;AAC/B,qDAAqD;AACrD,kCAAkC;AAClC,uCAAuC;AACvC,EAAE;AACF,6BAA6B;AAC7B,EAAE;AACF,8BAA8B;AAC9B,4BAA4B;AAC5B,wBAAwB;AACxB,+EAA+E;AAC/E,0CAA0C;AAC1C,uCAAuC;AACvC,EAAE;AACF,sDAAsD;AACtD,4DAA4D;AAC5D,8DAA8D;AAC9D,kEAAkE;AAClE,sDAAsD;AACtD,YAAY;AACZ,EAAE;AACF,wDAAwD;AACxD,gDAAgD;AAChD,YAAY;AACZ,EAAE;AACF,yDAAyD;AACzD,iDAAiD;AACjD,YAAY;AACZ,EAAE;AACF,sDAAsD;AACtD,0CAA0C;AAC1C,mCAAmC;AACnC,qBAAqB;AACrB,iCAAiC;AACjC,sBAAsB;AACtB,mBAAmB;AACnB,YAAY;AACZ,EAAE;AACF,yDAAyD;AACzD,0CAA0C;AAC1C,mCAAmC;AACnC,qBAAqB;AACrB,iCAAiC;AACjC,sBAAsB;AACtB,gBAAgB;AAChB,YAAY;AACZ,EAAE;AACF,wCAAwC;AACxC,sDAAsD;AACtD,YAAY;AACZ,EAAE;AACF,4DAA4D;AAC5D,0DAA0D;AAC1D,4DAA4D;AAC5D,YAAY;AACZ,EAAE;AACF,2CAA2C;AAC3C,kCAAkC;AAClC,YAAY;AACZ,EAAE;AACF,uCAAuC;AACvC,2DAA2D;AAC3D,eAAe;AACf,aAAa;AACb,uCAAuC;AACvC,2DAA2D;AAC3D,eAAe;AACf,QAAQ;AACR,EAAE;AACF,qCAAqC;AACrC,uCAAuC;AACvC,6CAA6C;AAC7C,6BAA6B;AAC7B,EAAE;AACF,yEAAyE;AACzE,wCAAwC;AACxC,0DAA0D;AAC1D,2BAA2B;AAC3B,YAAY;AACZ,EAAE;AACF,qCAAqC;AACrC,0BAA0B;AAC1B,uEAAuE;AACvE,EAAE;AACF,yCAAyC;AACzC,EAAE;AACF,gCAAgC;AAChC,+CAA+C;AAC/C,gBAAgB;AAChB,EAAE;AACF,mDAAmD;AACnD,2BAA2B;AAC3B,oDAAoD;AACpD,kCAAkC;AAClC,oBAAoB;AACpB,uBAAuB;AACvB,2BAA2B;AAC3B,mCAAmC;AACnC,iCAAiC;AACjC,oBAAoB;AACpB,gBAAgB;AAChB,YAAY;AACZ,EAAE;AACF,6BAA6B;AAC7B,iCAAiC;AACjC,gDAAgD;AAChD,uBAAuB;AACvB,+BAA+B;AAC/B,gBAAgB;AAChB,YAAY;AACZ,EAAE;AACF,2BAA2B;AAC3B,2BAA2B;AAC3B,YAAY;AACZ,EAAE;AACF,uCAAuC;AACvC,6BAA6B;AAC7B,YAAY;AACZ,QAAQ;AACR,IAAI","sourcesContent":["// import {clip} from \"../clip/clip\";\n// import {note, note as n} from \"../note/note\";\n// import TreeModel = require(\"tree-model\");\n// import {live} from \"../live/live\";\n// import {scene} from \"../scene/scene\";\n//\n// export namespace segment {\n//\n//     import Clip = clip.Clip;\n//     import Note = note.Note;\n//     import LiveClipVirtual = live.LiveClipVirtual;\n//     import Scene = scene.Scene;\n//     import ClipLive = live.ClipLive;\n//\n//     export class Segment {\n//\n//         beat_start: number;\n//         beat_end: number;\n//         scene: Scene;\n//         clip: ClipLive; // used as storage with an interface similar to Live\n//         clip_user_input_sync: ClipLive;\n//         clip_user_input_async: Clip;\n//\n//         constructor(note: TreeModel.Node<n.Note>) {\n//             this.beat_start = note.model.note.beat_start;\n//             this.beat_end = note.model.note.get_beat_end();\n//             let clip_dao_virtual = new LiveClipVirtual([note]);\n//             this.clip = new Clip(clip_dao_virtual);\n//         }\n//\n//         public set_clip_user_input_sync(clip: Clip) {\n//             this.clip_user_input_sync = clip;\n//         }\n//\n//         public set_clip_user_input_async(clip: Clip) {\n//             this.clip_user_input_async = clip;\n//         }\n//\n//         public get_note(): TreeModel.Node<n.Note> {\n//             return this.clip.get_notes(\n//                 this.beat_start,\n//                 0,\n//                 this.beat_end,\n//                 128\n//             )[0]\n//         }\n//\n//         public get_notes(): TreeModel.Node<n.Note>[] {\n//             return this.clip.get_notes(\n//                 this.beat_start,\n//                 0,\n//                 this.beat_end,\n//                 128\n//             )\n//         }\n//\n//         public get_endpoints_loop() {\n//             return [this.beat_start, this.beat_end]\n//         }\n//\n//         public set_endpoints_loop(beat_start, beat_end) {\n//             this.clip.set_loop_bracket_upper(beat_end);\n//             this.clip.set_loop_bracket_lower(beat_start);\n//         }\n//\n//         public set_scene(scene: Scene) {\n//             this.scene = scene;\n//         }\n//\n//         // public get_beat_lower() {\n//         //     return this.clip.get_loop_bracket_lower()\n//         // }\n//         //\n//         // public get_beat_upper() {\n//         //     return this.clip.get_loop_bracket_upper()\n//         // }\n//     }\n//\n//     export class SegmentIterator {\n//         private segments: Segment[];\n//         public direction_forward: boolean;\n//         private i: number;\n//\n//         constructor(segments: Segment[], direction_forward: boolean) {\n//             this.segments = segments;\n//             this.direction_forward = direction_forward;\n//             this.i = -1;\n//         }\n//\n//         // TODO: type declarations\n//         public next() {\n//             let value_increment = (this.direction_forward) ? 1 : -1;\n//\n//             this.i += value_increment;\n//\n//             if (this.i < 0) {\n//                 throw 'segment iterator < 0'\n//             }\n//\n//             if (this.i < this.segments.length) {\n//                 return {\n//                     value: this.segments[this.i],\n//                     done: false\n//                 }\n//             } else {\n//                 return {\n//                     value: null,\n//                     done: true\n//                 }\n//             }\n//         }\n//\n//         public current() {\n//             if (this.i > -1) {\n//                 return this.segments[this.i];\n//             } else {\n//                 return null;\n//             }\n//         }\n//\n//         public reset() {\n//             this.i = -1;\n//         }\n//\n//         public get_index_current() {\n//             return this.i;\n//         }\n//     }\n// }"]}