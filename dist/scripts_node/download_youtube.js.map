{"version":3,"file":"download_youtube.js","sourceRoot":"","sources":["../../src/scripts_node/download_youtube.ts"],"names":[],"mappings":"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","sourcesContent":["import {cli} from \"../cli/cli\";\nlet shell = require('shelljs');\nconst max_api = require('max-api');\n\nlet arg_url = new cli.Arg('url');\nlet option_outfile = new cli.Option('o', false, false, true);\nlet flag_audio_only = new cli.Flag('x');\nlet option_format = new cli.Option('audio-format');\nlet option_ffmpeg_location = new cli.Option('ffmpeg-location');\n\nlet git_repo = '/Users/elliottevers/Documents/DocumentsSymlinked/git-repos.nosync';\n\noption_format.set('wav');\n\nflag_audio_only.set(1);\n\noption_ffmpeg_location.set('/usr/local/bin/ffmpeg');\n\nlet name_project;\n\nmax_api.addHandler('set_url', (url) => {\n    arg_url.set(url);\n});\n\nmax_api.addHandler('set_project_name', (name) => {\n    name_project = name.split('/').pop();\n});\n\nname_project = 'project_name';\n\nlet download = () => {\n    let dir_project = git_repo + '/tk_music_projects/projects/' + name_project;\n\n    let dir_audio = dir_project + '/audio';\n\n    let dir_downloads = git_repo + '/tk_music_projects/downloads/';\n\n    // mkdir project name\n\n    shell.mkdir('-p', dir_project);\n\n    // mkdir underneath project called audio\n\n    shell.mkdir('-p', dir_audio);\n\n    // download to 1) audio dir 2) downloads dir\n\n    let msg;\n\n    option_outfile.set(dir_audio + '/' + name_project + '.%(ext)s');\n\n    let executable_youtube_dl_audio = new cli.Executable(\n        '/usr/local/bin/youtube-dl',\n        [flag_audio_only],\n        [option_outfile, option_format, option_ffmpeg_location],\n        [arg_url]\n    );\n\n    max_api.post(executable_youtube_dl_audio.get_command_full().join(' '));\n\n    shell.exec(\n        executable_youtube_dl_audio.get_command_full().join(' '),\n        {async: false}\n    );\n\n    option_outfile.set(dir_downloads + '/' + name_project + '.%(ext)s');\n\n    let executable_youtube_dl_downloads = new cli.Executable(\n        '/usr/local/bin/youtube-dl',\n        [flag_audio_only],\n        [option_outfile, option_format, option_ffmpeg_location],\n        [arg_url]\n    );\n\n    shell.exec(\n        executable_youtube_dl_downloads.get_command_full().join(' '),\n        {async: false}\n    );\n\n    max_api.outlet(msg);\n};\n\nmax_api.addHandler(\"download\", () => {\n    download()\n});\n"]}