{"version":3,"file":"command_shell.js","sourceRoot":"","sources":["../src/command_shell.ts"],"names":[],"mappings":"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","sourcesContent":["// declare let Global: any;\n// TODO: make dedicated library object for the following\nimport {message} from \"./message/messenger\";\nimport Messenger = message.Messenger;\nimport {log} from \"./log/logger\";\nimport Logger = log.Logger;\n\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\n\nexport {}\n\ndeclare let Global: any;\n\nlet env: string = 'max';\n\nif (env === 'max') {\n    autowatch = 1;\n}\n\nlet dir = '/Users/elliottevers/Documents/git-repos.nosync/music/';\n\nlet path_interpreter = dir + '.venv_36_test/bin/python';\n\n// TODO: put in patcher if it turns out to make sense\n// let path_script = dir + 'sandbox/download_youtube.py';\n// let path_script: string;\n\nlet args: object[] = [];\n\nlet flags: string[] = [];\n\nlet options: string[] = [];\n\nlet outlet_shell_obj = 0;\n\nlet messenger: Messenger;\n\nlet logger: Logger;\n\n// let set_path_script = (path) => {\n//     path_script = path;\n// };\n\nlet set_arg = (arg, val) => {\n    args.push({arg: val})\n};\n\nlet set_flag = (flag) => {\n    flags.push(flag)\n};\n\nlet set_option = (option) => {\n    options.push(option)\n};\n\nlet init = () => {\n    messenger = new Messenger(env, outlet_shell_obj);\n    logger = new Logger(env);\n};\n\n\nlet get_cmd = () => {\n    let cmd: string[] = [];\n\n    cmd.push(path_interpreter);\n\n    // cmd.push(path_script);\n\n    // flags\n    for (let flag of flags) {\n        cmd.push(flag);\n    }\n\n    // options\n    for (let option of options) {\n        cmd.push(option);\n    }\n\n    // args\n    for (let arg of args) {\n        Object.keys(arg).forEach((key) =>{\n            cmd.push(key);\n            cmd.push(arg[key]);\n        });\n    }\n\n    return logger.log(cmd.join(' '));\n\n};\n\n// let run = (path_script, cmd) => {\n//     messenger = new Messenger(env, outlet_shell_obj);\n//\n//     logger = new Logger(env);\n//\n//     let cmd_script: string[] = [];\n//\n//     cmd_script.push(path_interpreter);\n//\n//     cmd_script.push(path_script);\n//\n//     // cmd_script.push('--');\n//\n//     cmd_script.push(cmd);\n//\n//     messenger.message(cmd_script);\n//\n//     logger.log(cmd_script.join(' '));\n// };\n\nlet run = () => {\n    messenger = new Messenger(env, outlet_shell_obj);\n    //\n    // logger = new Logger(env);\n    //\n    // let cmd_script: string[] = [];\n    //\n    // cmd_script.push(path_interpreter);\n    //\n    // cmd_script.push(path_script);\n    //\n    // // cmd_script.push('--');\n    //\n    // cmd_script.push(cmd);\n    //\n    // messenger.message(cmd_script);\n    //\n    // logger.log(cmd_script.join(' '));\n\n    let argv: string[] = [];\n\n    argv.push('/usr/local/bin/youtube-dl');\n    argv.push('-x');\n    argv.push('-o');\n    argv.push('\\\\\\\"/Users/elliottevers/Documents/git-repos.nosync/audio/youtube/tswift_teardrops.%(ext)s\\\\\\\"');\n    argv.push('https://www.youtube.com/watch?v=CbkvLYrEvF4');\n\n\n    messenger.message(argv);\n};\n\n\nif (typeof Global !== \"undefined\") {\n    Global.command_shell = {};\n    Global.command_shell.set_arg = set_arg;\n    Global.command_shell.set_option = set_option;\n    Global.command_shell.set_flag = set_flag;\n    Global.command_shell.init = init;\n    Global.command_shell.get_cmd = get_cmd;\n    Global.command_shell.run = run;\n}\n\n// main();\n// run('cmd');"]}