{"version":3,"file":"scene.js","sourceRoot":"","sources":["../../src/scene/scene.ts"],"names":[],"mappings":"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","sourcesContent":["import {live, live as li} from \"../live/live\";\nimport {message} from \"../message/messenger\";\nimport {utils} from \"../utils/utils\";\n\nexport namespace scene {\n\n    import Messenger = message.Messenger;\n    import iLiveApiJs = live.iLiveApiJs;\n\n    export class Scene {\n\n        scene_dao: SceneDao;\n\n        constructor(scene_dao) {\n            this.scene_dao = scene_dao;\n        }\n\n        public fire(force_legato: boolean) {\n            this.scene_dao.fire(force_legato)\n        }\n\n        public get_id(): string {\n            // TODO: implement\n            return\n        }\n\n        set_path_deferlow(key_route): void {\n            this.scene_dao.set_path_deferlow(\n                'set_path_' + key_route,\n                this.get_path()\n            )\n        }\n\n        public get_path(): string {\n            return this.scene_dao.get_path()\n        }\n    }\n\n    export interface iSceneDao {\n        fire(force_legato: boolean)\n        get_path(): string\n    }\n\n    export class SceneDaoVirtual implements iSceneDao {\n        fire(force_legato: boolean) {\n            return\n        }\n\n        get_path(): string {\n            return \"\";\n        }\n\n        set_path_deferlow(key_route_override: string, path_live: string): void {\n            return\n        }\n    }\n\n    export class SceneDao implements iSceneDao {\n        live_api;\n        messenger: Messenger;\n        deferlow: boolean;\n        key_route: string;\n        env: string;\n\n        constructor(live_api: iLiveApiJs, messenger, deferlow?: boolean, key_route?: string, env?: string) {\n            this.live_api = live_api;\n            this.messenger = messenger;\n            if (deferlow && !key_route) {\n                throw new Error('key route not specified when using deferlow');\n            }\n            this.deferlow = deferlow;\n            this.key_route = key_route;\n            this.env = env;\n        }\n\n        set_path_deferlow(key_route_override: string, path_live: string): void {\n            let mess: any[] = [key_route_override];\n\n            for (let word of utils.PathLive.to_message(path_live)) {\n                mess.push(word)\n            }\n\n            this.messenger.message(mess)\n        }\n\n        public fire(force_legato: boolean) {\n            // if (this.deferlow) {\n            //     this.messenger.message([this.key_route, \"set\", \"loop_end\", beat]);\n            // } else {\n            //     this.clip_live.set('loop_end', beat);\n            // }\n            if (this.deferlow) {\n                this.messenger.message([this.key_route, \"call\", \"fire\", force_legato ? '1' : '0']);\n            } else {\n                this.live_api.call(\"fire\", force_legato ? '1' : '0')\n\n            }\n        }\n\n        get_path(): string {\n            return utils.cleanse_path(this.live_api.get_path());\n        }\n    }\n\n    export class SceneIterator {\n        private scenes: Scene[];\n        public direction_forward: boolean;\n        private i: number;\n\n        constructor(scenes: Scene[], direction_forward: boolean) {\n            this.scenes = scenes;\n            this.direction_forward = direction_forward;\n            this.i = -1;\n        }\n\n        // TODO: type declarations\n        public next() {\n            let value_increment = (this.direction_forward) ? 1 : -1;\n\n            this.i += value_increment;\n\n            if (this.i < 0) {\n                throw 'segment iterator < 0'\n            }\n\n            if (this.i < this.scenes.length) {\n                return {\n                    value: this.scenes[this.i],\n                    done: false\n                }\n            } else {\n                return {\n                    value: null,\n                    done: true\n                }\n            }\n        }\n\n        public current() {\n            if (this.i > -1) {\n                return this.scenes[this.i];\n            } else {\n                return null;\n            }\n        }\n\n        public reset() {\n            this.i = -1;\n        }\n\n        public get_index_current() {\n            return this.i;\n        }\n    }\n}"]}