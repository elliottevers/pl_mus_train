{"version":3,"file":"target.js","sourceRoot":"","sources":["../../src/target/target.ts"],"names":[],"mappings":"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","sourcesContent":["import TreeModel = require(\"tree-model\");\nimport {note as n} from \"../note/note\"\nimport {phrase as p} from \"../phrase/phrase\"\n\n\nexport namespace target {\n\n    let min_width_clip = 0.25;\n\n    export class Target {\n        note: TreeModel.Node<n.Note>;\n        phrase: p.Phrase;\n\n        constructor(note: TreeModel.Node<n.Note>, phrase: p.Phrase) {\n            this.note = note;\n            this.phrase = phrase;\n        }\n\n        public value(): number {\n            return this.note.model.pitch;\n        }\n\n        public get_note_interval_beats(): number[] {\n            return this.note.model.get_interval_beats();\n        }\n\n        public get_phrase_interval_beats(): number[] {\n            return this.phrase.get_interval_beats();\n        }\n\n        // TODO: annotate\n        public set_note_interval_beats(note_interval_beats: number[], reverse: boolean) {\n            let beat_lower = note_interval_beats[0];\n            let beat_upper = note_interval_beats[1];\n\n            if (beat_upper - beat_lower < min_width_clip) {\n                beat_upper = beat_lower + min_width_clip;\n            }\n\n            if (reverse) {\n                this.phrase.clip.set_clip_endpoint_upper(beat_upper);\n                this.phrase.clip.set_clip_endpoint_lower(beat_lower);\n            } else {\n                this.phrase.clip.set_clip_endpoint_lower(beat_lower);\n                this.phrase.clip.set_clip_endpoint_upper(beat_upper);\n            }\n        }\n\n        public set_phrase_interval_beats(phrase_interval_beats: number[], reverse: boolean) {\n            let beat_lower = phrase_interval_beats[0];\n            let beat_upper = phrase_interval_beats[1];\n            if (reverse) {\n                this.phrase.clip.set_loop_bracket_upper(beat_upper);\n                this.phrase.clip.set_loop_bracket_lower(beat_lower);\n            } else {\n                this.phrase.clip.set_loop_bracket_lower(beat_lower);\n                this.phrase.clip.set_loop_bracket_upper(beat_upper);\n            }\n        }\n    }\n\n    export class TargetIterator {\n        phrase_iterator: p.PhraseIterator;\n        i: number;\n        current: any;\n\n        // TODO: figure out how to annotate\n        next() {\n            this.i += 1;\n\n            var phrase_current = this.phrase_iterator.current();\n\n            var note_result_next = phrase_current.note_iterator.next();\n\n            var note_next = note_result_next.value;\n\n            if (!note_result_next.done) {\n                this.current = new Target(note_next, phrase_current);\n                return {\n                    value: this.current,\n                    done: false\n                }\n            }\n\n            var phrase_result_next = this.phrase_iterator.next();\n\n            if (!phrase_result_next.done) { // note_next.done is true by now\n                var phrase_next = this.phrase_iterator.current();\n\n                note_result_next = phrase_next.note_iterator.next();\n\n                note_next = note_result_next.value;\n\n                this.current = new Target(note_next, phrase_next);\n\n                return {\n                    value: this.current,\n                    done: false\n                }\n            }\n\n            return {\n                value: null,\n                done: true\n            }\n        }\n\n        set_note_interval_beats(): void {\n            // TODO: use direction in logic\n            if (this.phrase_iterator.current() !== null) {\n                var direction_forward = this.phrase_iterator.current().note_iterator.direction_forward;\n            }\n            var reverse;\n            var note_interval = this.current.get_note_interval_beats();\n\n            if (this.i === 0) {\n                this.current.set_note_interval_beats(note_interval);\n            } else {\n                reverse = true;\n                this.current.set_note_interval_beats(note_interval, reverse);\n            }\n        }\n\n        set_phrase_interval_beats(): void {\n            // TODO: use direction in logic\n            var direction_forward = this.phrase_iterator.direction_forward;\n            var reverse;\n            var phrase_interval_beats = this.current.get_phrase_interval_beats();\n\n            if (this.i === 0) {\n                this.current.set_phrase_interval_beats(phrase_interval_beats);\n            } else {\n                reverse = true;\n                this.current.set_phrase_interval_beats(phrase_interval_beats, reverse);\n            }\n        }\n    }\n}"]}