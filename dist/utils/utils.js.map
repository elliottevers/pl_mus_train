{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils/utils.ts"],"names":[],"mappings":";;AAAA,IAAiB,KAAK,CAoBrB;AApBD,WAAiB,KAAK;IAElB;QAAA;QAiBA,CAAC;QAfiB,mBAAU,GAAxB,UAAyB,SAAiB;YACtC,IAAI,OAAO,GAAG,EAAE,CAAC;YAEjB,KAAiB,UAAoB,EAApB,KAAA,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,EAApB,cAAoB,EAApB,IAAoB,EAAE;gBAAlC,IAAI,IAAI,SAAA;gBACT,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAEtC,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE;oBACzB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;iBACzB;qBAAM;oBACH,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA;iBACjC;aACJ;YAED,OAAO,OAAO,CAAA;QAClB,CAAC;QACL,eAAC;IAAD,CAAC,AAjBD,IAiBC;IAjBY,cAAQ,WAiBpB,CAAA;AACL,CAAC,EApBgB,KAAK,GAAL,aAAK,KAAL,aAAK,QAoBrB","sourcesContent":["export namespace utils {\n\n    export class PathLive  {\n\n        public static to_message(path_live: string) {\n            let message = [];\n\n            for (let word of path_live.split(' ')) {\n                let cleansed = word.replace(/\"/g, \"\");\n\n                if (isNaN(Number(cleansed))) {\n                    message.push(cleansed)\n                } else {\n                    message.push(Number(cleansed))\n                }\n            }\n\n            return message\n        }\n    }\n}\n"]}