{"version":3,"file":"prediction_preprocessor.js","sourceRoot":"","sources":["../../src/preprocess/prediction_preprocessor.ts"],"names":[],"mappings":";;AAAA,IAAiB,UAAU,CAwC1B;AAxCD,WAAiB,UAAU;IACvB;QAQI,gCAAY,IAAY;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,IAAI,KAAK,mBAAmB,EAAE;gBAC9B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aAClB;QACL,CAAC;QAEM,uCAAM,GAAb,UAAc,UAAkB;YAC5B,IAAI,IAAI,CAAC,IAAI,KAAK,mBAAmB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;gBAClE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAClC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;aACrB;QACL,CAAC;QAEM,sCAAK,GAAZ;YACI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACrB,CAAC;QAAA,CAAC;QAEF,+CAAc,GAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;QAAA,CAAC;QAEF,iDAAgB,GAAhB;YACI,IAAI,IAAI,CAAC,IAAI,KAAK,mBAAmB,EAAE;gBACnC,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC;aACtC;QACL,CAAC;QACL,6BAAC;IAAD,CAAC,AAtCD,IAsCC;IAtCY,iCAAsB,yBAsClC,CAAA;AACL,CAAC,EAxCgB,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAwC1B","sourcesContent":["export namespace preprocess {\n    export class PredictionPreprocessor {\n\n        // TODO: type alias\n        mode: string;\n        predictions: number[];\n        limit: number;\n        counter: number;\n\n        constructor(mode: string) {\n            this.mode = mode;\n            this.predictions = [];\n            this.counter = 0;\n            if (mode === 'monophonic_guitar') {\n                this.limit = 1;\n            }\n        }\n\n        public accept(prediction: number): void {\n            if (this.mode === 'monophonic_guitar' && (this.counter < this.limit)) {\n                this.predictions.push(prediction);\n                this.counter += 1;\n            }\n        }\n\n        public reset(): void {\n            this.predictions = [];\n            this.counter = 0;\n        };\n\n        get_prediction(): number[] {\n            return this.predictions;\n        };\n\n        get_state_primed(): boolean {\n            if (this.mode === 'monophonic_guitar') {\n                return this.counter === this.limit;\n            }\n        }\n    }\n}"]}