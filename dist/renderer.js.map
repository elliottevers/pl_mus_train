{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../src/renderer.ts"],"names":[],"mappings":"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","sourcesContent":["declare let Global: any;\n// TODO: make dedicated library object for the following\ndeclare let autowatch: any;\ndeclare let inlets: any;\ndeclare let outlets: any;\ndeclare function outlet(n: number, o: any): void;\n\nimport {clip as c} from \"./clip/clip\";\nimport {message as m} from \"./message/messenger\";\nimport {window as w} from \"./render/window\";\nimport {log} from \"./log/logger\";\nimport {live as li} from \"./live/live\"\n// const sinon = require(\"sinon\");\n\n\n\n// let env: string = process.argv[2];\n// TODO: handle better - if set to max, can't run in node, but can compile TypeScript to max object\n// if we switch from node execution to max execution, will max have stopped watching?\nlet env: string = 'max';\n\nif (env === 'max') {\n    autowatch = 1;\n}\n\nlet main = ()=>{\n\n    // var clip_1 = new c.Clip(new cd.ClipDao(index_track_1, index_clip_slot_universal, messenger, deferlow));\n\n    // let b_stub_live_api: boolean = false;\n\n    let live_api_1, live_api_2, live_api_3, live_api_4;\n\n    // get(property: string): any;\n    // set(property: string, value: any): void;\n    // call(func: string): void;\n\n    if (env === 'node') {\n        live_api_1 = {\n            get: (property: string): any => {return 0},\n            set: (property: string, value: any): void => {},\n            call: (func: string,  ...args: any[]): any => {return 0}\n        };\n        live_api_2 = {\n            get: (property: string) => {return 0},\n            set: (property: string, value: any): void => {},\n            call: (func: string,  ...args: any[]): any => {return 0}\n        };\n        live_api_3 = {\n            get: (property: string) => {return 0},\n            set: (property: string, value: any): void => {},\n            call: (func: string,  ...args: any[]): any => {return 0}\n        };\n        live_api_4 = {\n            get: (property: string) => {return 0},\n            set: (property: string, value: any): void => {},\n            call: (func: string,  ...args: any[]): any => {return 0}\n        };\n    } else {\n        live_api_1 = new li.LiveApiJs(15, 0);\n        live_api_2 = new li.LiveApiJs(14, 0);\n        live_api_3 = new li.LiveApiJs(13, 0);\n        live_api_4 = new li.LiveApiJs(12, 0);\n    }\n\n    // clip 1\n    let clip_dao_1 = new c.ClipDao(\n        live_api_1,\n        new m.Messenger(env, 0),\n        false\n    );\n    // sinon.stub(clip_dao_1, \"get_start_marker\").callsFake(() => {\n    //     return 0;\n    // });\n    // sinon.stub(clip_dao_1, \"get_end_marker\").callsFake(() => {\n    //     return 4;\n    // });\n    // sinon.stub(clip_dao_1, \"get_notes\").callsFake(() => {\n    //     return [\"notes\",1,\"note\",50,0,4,127,0,\"done\"]\n    // });\n\n\n    // clip 2\n    let clip_dao_2 = new c.ClipDao(\n        live_api_2,\n        new m.Messenger(env, 0),\n        false\n    );\n    // sinon.stub(clip_dao_2, \"get_start_marker\").callsFake(() => {\n    //     return 0;\n    // });\n    // sinon.stub(clip_dao_2, \"get_end_marker\").callsFake(() => {\n    //     return 4;\n    // });\n    // sinon.stub(clip_dao_2, \"get_notes\").callsFake(() => {\n    //     return [\"notes\",2,\"note\",50,0,2,127,0,\"note\",54,2,2,127,0,\"done\"]\n    // });\n\n\n    // clip 3\n    let clip_dao_3 = new c.ClipDao(\n        live_api_3,\n        new m.Messenger(env, 0),\n        false\n    );\n    // sinon.stub(clip_dao_3, \"get_start_marker\").callsFake(() => {\n    //     return 0;\n    // });\n    // sinon.stub(clip_dao_3, \"get_end_marker\").callsFake(() => {\n    //     return 4;\n    // });\n    // sinon.stub(clip_dao_3, \"get_notes\").callsFake(() => {\n    //     return [\"notes\",3,\"note\",50,0,1,127,0,\"note\",52,1,1,127,0,\"note\",54,2,2,127,0,\"done\"]\n    // });\n\n\n    // clip 4\n    let clip_dao_4 = new c.ClipDao(\n        live_api_4,\n        new m.Messenger(env, 0),\n        false\n    );\n    // sinon.stub(clip_dao_4, \"get_start_marker\").callsFake(() => {\n    //     return 0;\n    // });\n    // sinon.stub(clip_dao_4, \"get_end_marker\").callsFake(() => {\n    //     return 4;\n    // });\n    // sinon.stub(clip_dao_4, \"get_notes\").callsFake(() => {\n    //     return [\"notes\",4,\"note\",50,0,1,127,0,\"note\",52,1,1,127,0,\"note\",54,2,1,127,0,\"note\",55,3,1,127,0,\"done\"]\n    // });\n\n    let clip_1 = new c.Clip(clip_dao_1);\n    let clip_2 = new c.Clip(clip_dao_2);\n    let clip_3 = new c.Clip(clip_dao_3);\n    let clip_4 = new c.Clip(clip_dao_4);\n\n    clip_1.load_notes();\n    clip_2.load_notes();\n    clip_3.load_notes();\n    clip_4.load_notes();\n\n    var dim = 16 * 6 * 4;\n\n    var pwindow = new w.Pwindow(\n        dim,\n        dim,\n        new m.Messenger(env, 0)\n    );\n\n    pwindow.set_clip(clip_1);\n\n    pwindow.elaborate(\n        clip_2.get_notes(),\n        clip_2.get_notes()[0].model.note.beat_start,\n        clip_2.get_notes()[1].model.note.get_beat_end()\n    );\n\n    pwindow.elaborate(\n        clip_3.get_notes().slice(0, 2),\n        clip_3.get_notes().slice(0, 2)[0].model.note.beat_start,\n        clip_3.get_notes().slice(0, 2)[1].model.note.get_beat_end()\n    );\n\n    pwindow.elaborate(\n        clip_4.get_notes().slice(2, 4),\n        clip_4.get_notes().slice(2, 4)[0].model.note.beat_start,\n        clip_4.get_notes().slice(2, 4)[1].model.note.get_beat_end()\n    );\n\n    let messages_notes = pwindow.get_messages_render_clips();\n\n    let messages_tree = pwindow.get_messages_render_tree();\n\n    let logger = new log.Logger(env);\n    let messenger = new m.Messenger(env, 0);\n\n    // messenger.message(messages_notes.length.toString());\n    // messenger.message(messages_tree.length.toString());\n\n    for (let message of messages_notes) {\n        messenger.message(message);\n        // logger.log(message);\n        // outlet(0, message);\n    }\n\n    for (let message of messages_tree) {\n        messenger.message(message);\n        // logger.log(message);\n        // outlet(0, message);\n    }\n};\n\nif (typeof Global !== \"undefined\") {\n    Global.renderer = {};\n    Global.renderer.main = main;\n}"]}